{"version":3,"file":"static/js/81ee6a2458a4.chunk.js","mappings":"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","sources":["webpack://hexo-pro-client/./client/src/assets/link.svg","webpack://hexo-pro-client/./client/src/assets/pin.svg","webpack://hexo-pro-client/./client/src/assets/pin-fill.svg","webpack://hexo-pro-client/./client/src/assets/linkLight.svg","webpack://hexo-pro-client/./client/src/pages/content/components/EditorHeader.tsx","webpack://hexo-pro-client/./client/src/utils/desktopUtils.ts"],"sourcesContent":["var _path, _path2;\nfunction _extends() { return _extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, _extends.apply(null, arguments); }\nimport * as React from \"react\";\nvar SvgLink = function SvgLink(props) {\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    width: 16,\n    height: 16,\n    className: \"link_svg__icon\",\n    viewBox: \"0 0 1024 1024\"\n  }, props), _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M574 665.4c-3.1-3.1-8.2-3.1-11.3 0L446.5 781.6c-53.8 53.8-144.6 59.5-204 0-59.5-59.5-53.8-150.2 0-204l116.2-116.2c3.1-3.1 3.1-8.2 0-11.3l-39.8-39.8c-3.1-3.1-8.2-3.1-11.3 0L191.4 526.5c-84.6 84.6-84.6 221.5 0 306s221.5 84.6 306 0l116.2-116.2c3.1-3.1 3.1-8.2 0-11.3zm258.6-474c-84.6-84.6-221.5-84.6-306 0L410.3 307.6c-3.1 3.1-3.1 8.2 0 11.3l39.7 39.7c3.1 3.1 8.2 3.1 11.3 0l116.2-116.2c53.8-53.8 144.6-59.5 204 0 59.5 59.5 53.8 150.2 0 204L665.3 562.6c-3.1 3.1-3.1 8.2 0 11.3l39.8 39.8c3.1 3.1 8.2 3.1 11.3 0l116.2-116.2c84.5-84.6 84.5-221.5 0-306.1\"\n  })), _path2 || (_path2 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M610.1 372.3c-3.1-3.1-8.2-3.1-11.3 0L372.3 598.7c-3.1 3.1-3.1 8.2 0 11.3l39.6 39.6c3.1 3.1 8.2 3.1 11.3 0l226.4-226.4c3.1-3.1 3.1-8.2 0-11.3z\"\n  })));\n};\nexport default SvgLink;","var _path;\nfunction _extends() { return _extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, _extends.apply(null, arguments); }\nimport * as React from \"react\";\nvar SvgPin = function SvgPin(props) {\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    width: 16,\n    height: 16,\n    className: \"pin_svg__icon\",\n    viewBox: \"0 0 1024 1024\"\n  }, props), _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M648.728 130.78a73.1 73.1 0 0 1 22.675 15.433l191.56 191.756a73.143 73.143 0 0 1-22.137 118.564l-67.877 30.062-127.341 127.488-10.094 140.24a73.143 73.143 0 0 1-124.684 46.445L387.17 676.986l-210.725 211.7-51.834-51.615L335.458 625.25 207.53 497.225a73.143 73.143 0 0 1 46.3-124.635l144.237-10.777 125.074-125.22 29.38-67.78a73.143 73.143 0 0 1 96.206-38.034m-29.086 67.12-34.914 80.53-154.087 154.332-171.398 12.751 303.323 303.543 12.044-167.4 156.233-156.428 80.384-35.596z\"\n  })));\n};\nexport default SvgPin;","var _path;\nfunction _extends() { return _extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, _extends.apply(null, arguments); }\nimport * as React from \"react\";\nvar SvgPinFill = function SvgPinFill(props) {\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    width: 16,\n    height: 16,\n    className: \"pin-fill_svg__icon\",\n    viewBox: \"0 0 1024 1024\"\n  }, props), _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M648.728 130.78a73.1 73.1 0 0 1 22.675 15.433l191.56 191.756a73.143 73.143 0 0 1-22.137 118.564l-67.877 30.062-127.341 127.488-10.094 140.24a73.143 73.143 0 0 1-124.684 46.445L387.17 676.986l-210.725 211.7-51.834-51.615L335.458 625.25 207.53 497.225a73.143 73.143 0 0 1 46.3-124.635l144.237-10.777 125.074-125.22 29.38-67.78a73.143 73.143 0 0 1 96.206-38.034\",\n    className: \"pin-fill_svg__custom-cursor-on-hover\"\n  })));\n};\nexport default SvgPinFill;","var _path, _path2;\nfunction _extends() { return _extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, _extends.apply(null, arguments); }\nimport * as React from \"react\";\nvar SvgLinkLight = function SvgLinkLight(props) {\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    width: 16,\n    height: 16,\n    className: \"linkLight_svg__icon\",\n    viewBox: \"0 0 1024 1024\"\n  }, props), _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#fff\",\n    d: \"M574 665.4c-3.1-3.1-8.2-3.1-11.3 0L446.5 781.6c-53.8 53.8-144.6 59.5-204 0-59.5-59.5-53.8-150.2 0-204l116.2-116.2c3.1-3.1 3.1-8.2 0-11.3l-39.8-39.8c-3.1-3.1-8.2-3.1-11.3 0L191.4 526.5c-84.6 84.6-84.6 221.5 0 306s221.5 84.6 306 0l116.2-116.2c3.1-3.1 3.1-8.2 0-11.3zm258.6-474c-84.6-84.6-221.5-84.6-306 0L410.3 307.6c-3.1 3.1-3.1 8.2 0 11.3l39.7 39.7c3.1 3.1 8.2 3.1 11.3 0l116.2-116.2c53.8-53.8 144.6-59.5 204 0 59.5 59.5 53.8 150.2 0 204L665.3 562.6c-3.1 3.1-3.1 8.2 0 11.3l39.8 39.8c3.1 3.1 8.2 3.1 11.3 0l116.2-116.2c84.5-84.6 84.5-221.5 0-306.1\"\n  })), _path2 || (_path2 = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#fff\",\n    d: \"M610.1 372.3c-3.1-3.1-8.2-3.1-11.3 0L372.3 598.7c-3.1 3.1-3.1 8.2 0 11.3l39.6 39.6c3.1 3.1 8.2 3.1 11.3 0l226.4-226.4c3.1-3.1 3.1-8.2 0-11.3z\"\n  })));\n};\nexport default SvgLinkLight;","import { DeleteOutlined, SettingOutlined, EditOutlined, SaveOutlined } from \"@ant-design/icons\"\nimport { Button, Col, message, Popconfirm, Row } from \"antd\"\nimport ButtonGroup from \"antd/es/button/button-group\"\nimport React, { useContext, useState } from \"react\"\nimport cs from 'classnames'\nimport IconPin from \"@/assets/pin.svg\"\nimport IconPinFill from \"@/assets/pin-fill.svg\"\nimport { useDispatch } from \"react-redux\"\nimport { GlobalContext } from \"@/context\"\nimport useLocale from \"@/hooks/useLocale\"\nimport useDeviceDetect from \"@/hooks/useDeviceDetect\"\nimport { openDesktopLink } from \"@/utils/desktopUtils\"\nimport IconLink from \"@/assets/link.svg\"\nimport IconLinkLight from \"@/assets/linkLight.svg\"\n\nexport default function EditorHeader({ initTitle, isPage, isDraft, popTitle, popDes, className = '', permalink = undefined, handleChangeTitle, handleTitleBlur = undefined, handleSettingClick, handleRemoveSource, handlePublish, handleUnpublish }) {\n\n    const [isPin, setIsPin] = useState(true)\n    const [isEditingTitle, setIsEditingTitle] = useState(false)\n    const [tempTitle, setTempTitle] = useState('')\n    const dispatch = useDispatch()\n    const locale = useLocale()\n    const { isMobile } = useDeviceDetect()\n\n    const themeStyles = {\n        light: {\n            backgroundColor: \"white\",\n            borderBottomColor: 'gray',\n            inputBackgroundColor: \"white\",\n            inputColor: \"black\",\n            buttonBackgroundColor: \"white\",\n            buttonColor: \"black\"\n        },\n        dark: {\n            backgroundColor: \"#2e2e2e\",\n            borderBottomColor: '#555',\n            inputBackgroundColor: \"#2e2e2e\",\n            inputColor: \"white\",\n            buttonBackgroundColor: \"#555\",\n            buttonColor: \"white\"\n        }\n    }\n\n    const { theme } = useContext(GlobalContext)\n    const currentTheme = themeStyles[theme]\n\n    // 响应式样式配置\n    const responsiveHeaderStyles: React.CSSProperties | null = isMobile ? {\n        flexWrap: 'wrap',\n        padding: '8px 0',\n    } : null\n\n    const responsiveInputStyles = isMobile ? {\n        fontSize: 22,\n        marginLeft: 8,\n        marginRight: 8,\n        height: 50\n    } : {\n        fontSize: 19,\n    }\n\n    const responsiveButtonColStyles = isMobile ? {\n        fontSize: 22,\n        marginLeft: 8,\n        marginRight: 8,\n        height: 50,\n        whiteSpace: 'nowrap'\n    } : {\n        fontSize: 18,\n        height: 60,\n    }\n\n    const handlePinClick = () => {\n        const newPinState = !isPin\n        setIsPin(newPinState)\n        dispatch({\n            type: 'toggle-vditor-toolbar-pin',\n            payload: {\n                vditorToolbarPin: newPinState\n            },\n        })\n    }\n\n    // 开始编辑标题\n    const startEditTitle = () => {\n        setTempTitle(initTitle)\n        setIsEditingTitle(true)\n    }\n\n    // 保存标题\n    const saveTitle = () => {\n        if (tempTitle.trim() === '') {\n            message.error('标题不能为空')\n            return\n        }\n        \n        handleChangeTitle(tempTitle) // 添加这行，确保父组件的标题状态更新\n        setIsEditingTitle(false)\n    }\n\n    // 取消编辑\n    const cancelEditTitle = () => {\n        setTempTitle(initTitle)\n        setIsEditingTitle(false)\n    }\n\n    // 处理标题输入变化\n    const handleTitleChange = (value) => {\n        setTempTitle(value)\n    }\n\n    return (\n        <Row style={{\n            width: \"100%\",\n            borderBottomColor: currentTheme.borderBottomColor,\n            borderBottom: '1px solid',\n            backgroundColor: currentTheme.backgroundColor,\n            ...responsiveHeaderStyles\n        }} align='middle' className={cs(\"editor-header\", className)}>\n            {/* 标题输入 */}\n            <Col xs={23} md={16} lg={14}>\n                {isEditingTitle ? (\n                    <input\n                        style={{\n                            width: \"100%\",\n                            border: 'none',\n                            outline: 'none',\n                            boxSizing: 'border-box',\n                            fontWeight: 500,\n                            backgroundColor: currentTheme.inputBackgroundColor,\n                            color: currentTheme.inputColor,\n                            ...responsiveInputStyles\n                        }}\n                        value={tempTitle}\n                        onChange={(e) => handleTitleChange(e.target.value)}\n                        onBlur={handleTitleBlur || undefined}\n                        autoFocus\n                    />\n                ) : (\n                    <div\n                        style={{\n                            width: \"100%\",\n                            boxSizing: 'border-box',\n                            fontWeight: 500,\n                            color: currentTheme.inputColor,\n                            ...responsiveInputStyles\n                        }}\n                    >\n                        {initTitle}\n                    </div>\n                )}\n            </Col>\n\n            {/* 操作按钮组 */}\n            <Col\n                xs={23}\n                md={8}\n                lg={10}\n                offset={isMobile ? 0 : 0}\n                style={{\n                    display: 'flex',\n                    alignItems: 'center',\n                    justifyContent: 'flex-end',\n                    paddingRight: !isMobile ? '20px' : undefined,\n                    ...responsiveButtonColStyles\n                }}>\n                <ButtonGroup style={{\n                    width: '100%',\n                    display: 'flex',\n                    flexDirection: 'row',\n                    alignItems: 'center',\n                    justifyContent: 'flex-end',\n                    gap: '10px',\n                    flexWrap: isMobile ? 'nowrap' : 'wrap',\n                    overflowX: isMobile ? 'auto' : 'visible'\n                }}>\n                    {/* 标题编辑按钮 */}\n                    {isEditingTitle ? (\n                        <>\n                            <Button \n                                type='primary'\n                                icon={<SaveOutlined />}\n                                onClick={saveTitle}\n                                style={{ \n                                    backgroundColor: currentTheme.buttonBackgroundColor, \n                                    color: currentTheme.buttonColor,\n                                    borderColor: theme === 'dark' ? '#555' : '#d9d9d9' // 添加适合主题的边框颜色\n                                }}\n                            >\n                                {isMobile ? '' : locale[\"editor.header.edit.title.save\"]}\n                            </Button>\n                            <Button \n                                type='default'\n                                onClick={cancelEditTitle}\n                                style={{ \n                                    backgroundColor: currentTheme.buttonBackgroundColor, \n                                    color: currentTheme.buttonColor,\n                                    borderColor: theme === 'dark' ? '#555' : '#d9d9d9' // 添加适合主题的边框颜色\n                                }}\n                            >\n                                {isMobile ? locale[\"editor.header.edit.title.cancel\"] : locale[\"editor.header.edit.title.cancel\"]}\n                            </Button>\n                        </>\n                    ) : (\n                        <Button \n                            type='default'\n                            icon={<EditOutlined />}\n                            onClick={startEditTitle}\n                            style={{ backgroundColor: currentTheme.buttonBackgroundColor, color: currentTheme.buttonColor }}\n                        >\n                            {isMobile ? '' : locale[\"editor.header.edit.title\"]}\n                        </Button>\n                    )}\n                    \n                    {/* 移动端优先显示主要操作 */}\n                    {!isMobile && (\n                        <>\n\n                        </>\n                    )}\n                    {\n                        (isPage || (!isPage && !isDraft)) && (\n                                                        <Button\n                                type=\"default\"\n                                style={{ backgroundColor: currentTheme.buttonBackgroundColor, color: currentTheme.buttonColor }}\n                                onClick={(event) => {\n                                    event.stopPropagation()\n                                    openDesktopLink(permalink)\n                                }}\n                                icon={theme === 'dark' ? <IconLinkLight /> : <IconLink />}\n                            >\n                            </Button>\n                        )\n                    }\n                    <Button type='default' icon={isPin ? <IconPinFill /> : <IconPin />}\n                        onClick={handlePinClick}\n                        style={{ backgroundColor: currentTheme.buttonBackgroundColor, color: currentTheme.buttonColor }} />\n                    <Button type='default' icon={<SettingOutlined />}\n                        onClick={(e) => handleSettingClick(e)}\n                        style={{ borderRight: 'none', backgroundColor: currentTheme.buttonBackgroundColor, color: currentTheme.buttonColor }} />\n                    {!isPage && (isDraft ?\n                        <Button type='primary'\n                            onClick={handlePublish}\n                            style={{\n                                zIndex: 2,\n                                border: '1px  dashed',\n                                borderColor: 'gray',\n                                backgroundColor: currentTheme.buttonBackgroundColor,\n                                color: currentTheme.buttonColor,\n                            }}>\n                            {isMobile ? '发布' : locale['editor.header.publish']}\n                        </Button>\n                        : <Button type='default'\n                            onClick={handleUnpublish}\n                            style={{\n                                backgroundColor: currentTheme.buttonBackgroundColor,\n                                color: currentTheme.buttonColor,\n                            }}>\n                            {locale['editor.header.unpublish']}\n                        </Button>\n                    )}\n\n                    <Popconfirm\n                        title={popTitle}\n                        description={popDes}\n                        onConfirm={() => {\n                            message.info({ content: 'ok' })\n                            handleRemoveSource()\n                        }}\n                        onCancel={() => {\n                            message.error({ content: 'cancel' })\n                        }}\n                    >\n                        <Button\n                            type='default'\n                            icon={<DeleteOutlined />}\n                            style={{\n                                paddingLeft: isMobile ? 0 : 30,\n                                backgroundColor: currentTheme.buttonBackgroundColor,\n                                color: currentTheme.buttonColor,\n                                width: isMobile ? 'auto' : 'auto',\n                                minWidth: isMobile ? '40px' : 'auto',\n                                padding: isMobile ? '0 8px' : undefined\n                            }} />\n                    </Popconfirm>\n                </ButtonGroup>\n            </Col>\n        </Row>\n    )\n}","/**\n * 桌面端工具函数\n */\n\n// 链接重定向设置接口\ninterface LinkRedirectSettings {\n  enabled: boolean;\n  domain: string;\n}\n\n/**\n * 检查是否在桌面端环境\n */\nexport const isDesktopEnvironment = (): boolean => {\n  return typeof window !== 'undefined' && (window as any).isHexoProDesktop === true;\n};\n\n/**\n * 获取链接重定向设置\n */\nexport const getLinkRedirectSettings = (): LinkRedirectSettings => {\n  if (typeof window === 'undefined') {\n    return { enabled: false, domain: 'http://localhost:4000' };\n  }\n\n  const enabled = localStorage.getItem('hexoProLinkRedirectEnabled') === 'true';\n  const domain = localStorage.getItem('hexoProCustomDomain') || 'http://localhost:4000';\n  \n  return { enabled, domain };\n};\n\n/**\n * 检查是否应该进行链接转换\n * 支持两种模式：\n * 1. 桌面端自动模式：在桌面端环境中自动转换\n * 2. 用户设置模式：根据用户设置决定是否转换\n */\nexport const shouldConvertLink = (): boolean => {\n  const settings = getLinkRedirectSettings();\n  \n  // 如果用户明确启用了链接重定向，则转换\n  if (settings.enabled) {\n    return true;\n  }\n  \n  // 如果用户没有启用，但在桌面端环境中，也进行转换（向后兼容）\n  return isDesktopEnvironment();\n};\n\n/**\n * 转换桌面端链接\n * 根据用户设置或桌面端环境，将博客文章的链接域名转换为自定义域名\n * @param permalink 原始链接\n * @returns 转换后的链接\n */\nexport const convertDesktopLink = (permalink: string): string => {\n  if (!permalink || !shouldConvertLink()) {\n    return permalink;\n  }\n\n  const settings = getLinkRedirectSettings();\n  const targetDomain = settings.enabled ? settings.domain : 'http://localhost:4000';\n\n  try {\n    // 解析目标域名\n    const targetUrl = new URL(targetDomain);\n    \n    // 如果是相对路径，直接构建完整的目标URL\n    if (permalink.startsWith('/')) {\n      return `${targetUrl.protocol}//${targetUrl.host}${permalink}`;\n    }\n\n    // 如果是完整URL，解析并替换域名和端口\n    const originalUrl = new URL(permalink);\n    originalUrl.protocol = targetUrl.protocol;\n    originalUrl.hostname = targetUrl.hostname;\n    originalUrl.port = targetUrl.port;\n    \n    return originalUrl.toString();\n  } catch (error) {\n    console.warn('[Desktop Utils]: 转换链接失败，使用原始链接:', error, permalink);\n    return permalink;\n  }\n};\n\n/**\n * 打开链接（桌面端优化版本）\n * 根据用户设置或桌面端环境，自动转换链接并打开\n * @param permalink 要打开的链接\n * @param target 打开方式，默认为 '_blank'\n */\nexport const openDesktopLink = (permalink: string, target: string = '_blank'): void => {\n  if (!permalink) return;\n\n  const convertedLink = convertDesktopLink(permalink);\n  \n  // 在桌面端环境中，优先使用 electron API\n  if (isDesktopEnvironment()) {\n    const electronAPI = (window as any).electronAPI;\n    if (electronAPI && electronAPI.openExternal) {\n      electronAPI.openExternal(convertedLink);\n      return;\n    }\n  }\n  \n  // 使用传统方式打开链接\n  window.open(convertedLink, target);\n};\n\n/**\n * 获取桌面端环境信息\n */\nexport const getDesktopEnvironmentInfo = () => {\n  if (!isDesktopEnvironment()) {\n    return null;\n  }\n\n  return {\n    isDesktop: true,\n    userAgent: navigator.userAgent,\n    platform: navigator.platform,\n    electronAPI: typeof (window as any).electronAPI !== 'undefined'\n  };\n};\n\n/**\n * 监听链接重定向设置变化\n * @param callback 设置变化时的回调函数\n * @returns 取消监听的函数\n */\nexport const onLinkSettingsChange = (callback: (settings: LinkRedirectSettings) => void) => {\n  if (typeof window === 'undefined') {\n    return () => {};\n  }\n\n  const handleSettingsChange = (event: CustomEvent) => {\n    callback(event.detail);\n  };\n\n  // 监听自定义事件\n  window.addEventListener('hexoProLinkSettingsChanged', handleSettingsChange as EventListener);\n\n  // 返回清理函数\n  return () => {\n    window.removeEventListener('hexoProLinkSettingsChanged', handleSettingsChange as EventListener);\n  };\n};\n\n/**\n * 批量更新链接重定向设置\n * @param enabled 是否启用链接重定向\n * @param domain 自定义域名\n */\nexport const updateLinkRedirectSettings = (enabled: boolean, domain: string): void => {\n  if (typeof window === 'undefined') return;\n\n  localStorage.setItem('hexoProLinkRedirectEnabled', enabled.toString());\n  localStorage.setItem('hexoProCustomDomain', domain);\n\n  // 触发自定义事件，通知其他组件设置已更新\n  window.dispatchEvent(new CustomEvent('hexoProLinkSettingsChanged', {\n    detail: { enabled, domain }\n  }));\n}; "],"names":["_path","_path2","_extends","Object","assign","bind","n","e","arguments","length","t","r","hasOwnProperty","call","apply","props","xmlns","width","height","className","viewBox","d","fill","EditorHeader","_ref","initTitle","isPage","isDraft","popTitle","popDes","_ref$className","_ref$permalink","permalink","undefined","handleChangeTitle","_ref$handleTitleBlur","handleTitleBlur","handleSettingClick","handleRemoveSource","handlePublish","handleUnpublish","_useState2","_slicedToArray","useState","isPin","setIsPin","_useState4","isEditingTitle","setIsEditingTitle","_useState6","tempTitle","setTempTitle","dispatch","useDispatch","locale","useLocale","isMobile","useDeviceDetect","theme","useContext","GlobalContext","currentTheme","light","backgroundColor","borderBottomColor","inputBackgroundColor","inputColor","buttonBackgroundColor","buttonColor","dark","responsiveHeaderStyles","flexWrap","padding","responsiveInputStyles","fontSize","marginLeft","marginRight","responsiveButtonColStyles","whiteSpace","React","Row","style","_objectSpread","borderBottom","align","cs","Col","xs","md","lg","border","outline","boxSizing","fontWeight","color","value","onChange","target","onBlur","autoFocus","offset","display","alignItems","justifyContent","paddingRight","ButtonGroup","flexDirection","gap","overflowX","Button","type","icon","SaveOutlined","onClick","trim","message","error","borderColor","EditOutlined","event","stopPropagation","openDesktopLink","IconLinkLight","IconLink","IconPinFill","IconPin","newPinState","payload","vditorToolbarPin","SettingOutlined","borderRight","zIndex","Popconfirm","title","description","onConfirm","info","content","onCancel","DeleteOutlined","paddingLeft","minWidth","isDesktopEnvironment","window","isHexoProDesktop","getLinkRedirectSettings","enabled","domain","localStorage","getItem","convertDesktopLink","settings","targetDomain","targetUrl","URL","startsWith","concat","protocol","host","originalUrl","hostname","port","toString","console","warn","convertedLink","electronAPI","openExternal","open","updateLinkRedirectSettings","setItem","dispatchEvent","CustomEvent","detail"],"sourceRoot":""}