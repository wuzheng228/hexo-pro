{"version":3,"file":"static/js/819ee51e3ceae.chunk.js","mappings":"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","sources":["webpack://hexo-pro-client/./node_modules/antd/es/col/index.js","webpack://hexo-pro-client/./node_modules/antd/es/row/index.js","webpack://hexo-pro-client/./client/src/pages/content/components/frontMatterAdder.tsx","webpack://hexo-pro-client/./client/src/pages/content/pages/page/pageSettings.tsx"],"sourcesContent":["\"use client\";\n\nimport { Col } from '../grid';\nexport default Col;","\"use client\";\n\nimport { Row } from '../grid';\nexport default Row;","import { Button, Card, Checkbox, Input, Tag, Tooltip } from \"antd\"\r\nimport React from \"react\"\r\nimport { useEffect, useState } from \"react\"\r\nimport useDeviceDetect from '../../../hooks/useDeviceDetect'\r\n\r\nconst CheckboxGroup = Checkbox.Group\r\n\r\nexport function FrontMatterAdder({ visible, onClose, title, existFrontMatter, frontMatter, onChange }) {\r\n    const { isMobile } = useDeviceDetect()\r\n    const [localVisible, setLocalVisible] = useState(false)\r\n    const [inputFmtKeyValue, setInputFmtKeyValue] = useState('')\r\n    const [inputFmtValueValue, setInputFmtValueValue] = useState('')\r\n\r\n    useEffect(() => {\r\n        setLocalVisible(visible)\r\n    }, [visible])\r\n\r\n    const existFontMatter = () => {\r\n        const fmkeys = Object.keys(existFrontMatter)\r\n        const options = []\r\n\r\n        fmkeys.forEach((name, i) => {\r\n            options.push({\r\n                label: (\r\n                    <Tooltip key={i} title={!frontMatter[name] ? 'unset' : frontMatter[name]}>\r\n                        <Tag color={!frontMatter[name] ? 'default' : 'blue'}>{name}</Tag>\r\n                    </Tooltip>\r\n                ),\r\n                value: name\r\n            })\r\n        })\r\n\r\n        return (\r\n            <CheckboxGroup options={options} defaultValue={fmkeys} onChange={(v) => {\r\n                const newfmt = {}\r\n                v.forEach(name => {\r\n                    newfmt[name] = !existFrontMatter[name] ? null : existFrontMatter[name]\r\n                })\r\n                console.log('newfmt', newfmt)\r\n                onChange(newfmt)\r\n            }} />\r\n        )\r\n    }\r\n\r\n    const onInputEnterKeyPress = () => {\r\n        if (inputFmtKeyValue.trim().length == 0) {\r\n            return\r\n        }\r\n        const newFmt = { ...frontMatter }\r\n        newFmt[inputFmtKeyValue] = inputFmtValueValue\r\n        onChange(newFmt)\r\n    }\r\n\r\n    const addFrontMatter = () => {\r\n        return (\r\n            <div style={{\r\n                display: 'flex',\r\n                flexDirection: 'column',\r\n                gap: 8,\r\n                width: '100%'\r\n            }}>\r\n                <div style={{\r\n                    display: 'grid',\r\n                    gridTemplateColumns: isMobile ? '1fr 1fr' : '1fr auto auto',\r\n                    gridTemplateRows: isMobile ? 'auto auto' : 'unset',\r\n                    gap: 8,\r\n                    alignItems: 'center'\r\n                }}>\r\n                    <Input\r\n                        placeholder=\"键名\"\r\n                        value={inputFmtKeyValue}\r\n                        onChange={(v) => setInputFmtKeyValue(v.target.value)}\r\n                        onPressEnter={onInputEnterKeyPress}\r\n                        status={!inputFmtKeyValue.trim() ? 'error' : undefined}\r\n                    />\r\n                    <Input\r\n                        placeholder=\"键值\"\r\n                        value={inputFmtValueValue}\r\n                        onChange={(v) => setInputFmtValueValue(v.target.value)}\r\n                        onPressEnter={onInputEnterKeyPress}\r\n                    />\r\n                    <Button\r\n                        type=\"primary\"\r\n                        onClick={onInputEnterKeyPress}\r\n                        disabled={!inputFmtKeyValue.trim()}\r\n                        style={{ minWidth: isMobile ? '100%' : 80 }}\r\n                    >\r\n                        添加\r\n                    </Button>\r\n                </div>\r\n                <Button\r\n                    danger\r\n                    onClick={() => {\r\n                        setLocalVisible(false)\r\n                        onClose()\r\n                    }}\r\n                    style={{ alignSelf: 'flex-end' }}\r\n                >\r\n                    关闭\r\n                </Button>\r\n            </div >\r\n        )\r\n    }\r\n\r\n    return localVisible ? (\r\n        <Card\r\n            title={title}\r\n            bordered={true}\r\n            hoverable={true}\r\n            style={{\r\n                position: 'absolute',\r\n                top: '100%',\r\n                zIndex: 100,\r\n                width: isMobile ? '80vw' : '600px',\r\n                maxWidth: '100vw',\r\n                left: isMobile ? 0 : undefined,\r\n                boxShadow: '0 4px 12px rgba(0,0,0,0.15)'\r\n            }}\r\n            extra={addFrontMatter()}\r\n            bodyStyle={{ padding: isMobile ? 12 : 24 }}\r\n        >\r\n            <div style={{\r\n                maxHeight: '60vh',\r\n                overflowY: 'auto',\r\n                paddingRight: 8\r\n            }}>\r\n                {existFontMatter()}\r\n            </div>\r\n        </Card>\r\n    ) : null\r\n}","import React, { useState } from \"react\"\nimport { Button, Col, Input, message, Modal, Row, Space, Tag, Tooltip } from \"antd\"\nimport { FrontMatterAdder } from \"../../components/frontMatterAdder\"\n\nexport function PageSettings({ visible, setVisible, pageMeta, setPageMeta, handleChange }) {\n    // 添加使用的状态\n    const [fmOpenStat, setFmOpenStat] = useState(false)\n    const [originFms, setOriginFms] = useState([])\n\n    const fmtClose = (v) => {\n        const newfmt = {}\n        Object.keys(pageMeta.frontMatter).forEach(key => {\n            if (key === v) {\n                return\n            }\n            newfmt[key] = pageMeta.frontMatter[key]\n        })\n        const meta = { ...pageMeta, frontMatter: newfmt }\n        setPageMeta(meta)\n    }\n\n    function isPathValid(path) {\n        // 匹配以.md为扩展名的文件名，并且路径只包含合法字符（字母、数字、斜杠、下划线、短横线和中文字符）\n        const regex = /^([\\u4e00-\\u9fa5a-zA-Z0-9-_\\/]+)\\/([\\u4e00-\\u9fa5a-zA-Z0-9-_]+\\.md)$/i\n        return regex.test(path)\n    }\n\n    return (\n        <Modal\n            title={\n                <div style={{ textAlign: 'left' }}>\n                    文章属性\n                </div>\n            }\n            visible={visible}\n            onCancel={() => {\n                setPageMeta({ ...pageMeta, tags: [], categories: [], frontMatter: originFms })\n                setVisible(false)\n            }}\n            onOk={() => {\n                if (!isPathValid(pageMeta.source)) {\n                    message.error('配置的页面路径非法请检查！')\n                } else {\n                    setVisible(false)\n                    handleChange({ frontMatter: pageMeta.frontMatter, source: pageMeta.source })\n                }\n            }}\n            afterOpenChange={() => {\n                setOriginFms(pageMeta.frontMatter)\n            }}\n            style={{ width: 800 }}\n        >\n            <Row style={{ marginTop: 15, marginBottom: 15 }}>\n                <Col>\n                    <Space style={{ width: '100', flexWrap: 'wrap' }}>\n                        {\n                            /* 遍历渲染已有的fontMatter */\n                            Object.keys(pageMeta.frontMatter).map((item) => {\n                                return (\n                                    <Tooltip key={item} title={!pageMeta.frontMatter[item] ? 'unset' : pageMeta.frontMatter[item]}>\n                                        <Tag closable onClose={() => fmtClose(item)} key={item} color=\"blue\" style={{ marginBottom: 5 }}>{item}</Tag>\n                                    </Tooltip>\n\n                                )\n                            })\n                        }\n                        <Button type='dashed'\n                            onClick={() => {\n                                setFmOpenStat(!fmOpenStat)\n                            }}\n                        >+自定义frontMatter</Button>\n                    </Space>\n\n                    {\n                        /* todo 打开添加标签的界面 */\n                        <FrontMatterAdder existFrontMatter={originFms} onClose={() => { setFmOpenStat(false) }} visible={fmOpenStat} title={'Font-Matter'} frontMatter={pageMeta.frontMatter} onChange={\n                            (v) => {\n                                const meta = { ...pageMeta, frontMatter: v }\n                                setPageMeta(meta)\n                            }\n                        } />\n                    }\n                </Col>\n            </Row>\n            <Row style={{ marginTop: 15, marginBottom: 15 }}>\n                <Col>\n                    <Input style={{ width: 350 }}  placeholder='请输入页面存放路径' value={pageMeta.source} onChange={(v) => {\n                        console.log(v.target.value)\n                        console.log(pageMeta)\n                        const newMeta = { ...pageMeta, source: v.target.value }\n                        console.log(newMeta)\n                        setPageMeta((pre)=>newMeta)\n                    }} />\n                </Col>\n            </Row>\n        </Modal>\n    )\n}"],"names":["CheckboxGroup","Checkbox","Group","FrontMatterAdder","_ref","visible","onClose","title","existFrontMatter","frontMatter","onChange","isMobile","useDeviceDetect","_useState2","_slicedToArray","useState","localVisible","setLocalVisible","_useState4","inputFmtKeyValue","setInputFmtKeyValue","_useState6","inputFmtValueValue","setInputFmtValueValue","useEffect","fmkeys","options","onInputEnterKeyPress","trim","length","newFmt","_objectSpread","React","Card","bordered","hoverable","style","position","top","zIndex","width","maxWidth","left","undefined","boxShadow","extra","display","flexDirection","gap","gridTemplateColumns","gridTemplateRows","alignItems","Input","placeholder","value","v","target","onPressEnter","status","Button","type","onClick","disabled","minWidth","danger","alignSelf","bodyStyle","padding","maxHeight","overflowY","paddingRight","Object","keys","forEach","name","i","push","label","Tooltip","key","Tag","color","defaultValue","newfmt","console","log","PageSettings","setVisible","pageMeta","setPageMeta","handleChange","fmOpenStat","setFmOpenStat","originFms","setOriginFms","Modal","textAlign","onCancel","tags","categories","onOk","path","source","test","message","error","afterOpenChange","Row","marginTop","marginBottom","Col","Space","flexWrap","map","item","closable","meta","fmtClose","newMeta","pre"],"sourceRoot":""}