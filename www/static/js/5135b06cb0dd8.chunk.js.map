{"version":3,"file":"static/js/5135b06cb0dd8.chunk.js","mappings":"+tCAqBe,SAASA,IAEpB,IAAMC,GAAWC,EAAAA,EAAAA,QAAO,MACoBC,EAAAC,GAAZC,EAAAA,EAAAA,UAAS,IAAG,GAArCC,EAAQH,EAAA,GAAEI,EAAWJ,EAAA,GAYtBK,EAA2C,CAC7C,CACIC,MAAO,KACPC,UAAW,QACXC,OAAQ,SAACC,EAAKC,EAAMC,GAChB,OAAQC,EAAAA,cAACC,EAAAA,EAAK,CAACC,MAAO,GAAIC,OAAQ,MAAOC,IAAKN,EAAKO,OACvD,GAEJ,CACIX,MAAO,OACPC,UAAW,QACXW,eAAgB,SAAFC,GAAkD,IAA7CC,EAAeD,EAAfC,gBAAiBC,EAAYF,EAAZE,aAAcC,EAAOH,EAAPG,QAC9C,OACIV,EAAAA,cAAA,OAAKW,UAAU,4BACXX,EAAAA,cAACY,EAAAA,EAAMC,OAAM,CACTC,IAAK5B,EACL6B,YAAY,oBACZC,MAAOP,EAAa,IAAM,GAC1BQ,SAAU,SAACD,GACPR,EAAgBQ,EAAME,OAAOF,MAAQ,CAACA,EAAME,OAAOF,OAAS,GAChE,EACAG,SAAU,WACNT,GACJ,IAIhB,EACAU,SAAU,SAACJ,EAAOK,GAAG,OAAML,IAAgD,IAAxCK,EAAI3B,MAAM4B,QAAQN,EAA8B,EACnFO,8BAA+B,SAACC,GACxBA,GACAC,YAAW,kBAAMvC,EAASwC,QAAQC,OAAO,GAAE,IAEnD,GAEJ,CACIjC,MAAO,KACPC,UAAW,YACXC,OAAQ,SAACC,EAAKC,EAAMC,GAChB,OAAQC,EAAAA,cAAA,KAAG4B,KAAMC,mBAAmB/B,EAAKgC,WAAYZ,OAAO,UAAUW,mBAAmB/B,EAAKgC,WAClG,GAEJ,CACIpC,MAAO,OACPC,UAAW,QAEf,CACID,MAAO,OACPC,UAAW,WAEf,CACID,MAAO,KACPC,UAAW,SACXC,OAAQ,SAACC,EAAKC,EAAMC,GAChB,OACIC,EAAAA,cAAC+B,EAAAA,EAAK,KACF/B,EAAAA,cAACgC,EAAAA,GAAI,CAACC,GAAE,SAAAC,OAAWpC,EAAKqC,MACpBnC,EAAAA,cAACoC,EAAAA,GAAM,CAACC,KAAK,WAAW,OAKxC,IAWR,OAPAC,EAAAA,EAAAA,YAAU,WAEN,OA7EAC,EAAAA,GAAAA,IAAY,oCAAqC,GAC5CC,MAAK,SAAAC,GACF,IAAMC,EAASD,EAAIE,KAAKC,KAAI,SAACC,EAAKC,GAC9B,MAAO,CAAEX,IAAKU,EAAIV,IAAKzC,MAAOmD,EAAInD,MAAOW,MAAOwC,EAAIxC,MAAO0C,KAAMF,EAAIE,KAAMjB,UAAWe,EAAIf,UAAWkB,QAASH,EAAIG,QAASC,IAAKH,EAAI,EACxI,IACAtD,EAAYkD,EAChB,IAuEG,WACH,CAER,GAAG,IAGC1C,EAAAA,cAAA,WACIA,EAAAA,cAACkD,EAAAA,EAAI,CAACC,MAAO,CAAEhD,OAAQ,SACnBH,EAAAA,cAACoD,EAAAA,EAAK,CAAC3D,QAASA,EAAS4D,WAAY9D,KAMrD,C","sources":["webpack://hexo-pro/./client/src/pages/content/pages/index.tsx"],"sourcesContent":["import React, { useEffect, useRef, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport service from '@/utils/api';\r\nimport { Link } from 'react-router-dom';\r\nimport _ from 'lodash';\r\n// import { GlobalState } from '@/store';\r\nimport { Button, Card, Image, Input, Space, Table, TableColumnProps, TableProps } from 'antd';\r\n\r\n\r\ninterface DataType {\r\n    key: string;\r\n    _id: string;\r\n    cover: string;\r\n    title: string;\r\n    permalink: string;\r\n    date: string;\r\n    updated: string;\r\n    option: string\r\n}\r\n\r\n\r\nexport default function Pages() {\r\n    // const userInfo = useSelector((state: GlobalState) => state.posts);\r\n    const inputRef = useRef(null)\r\n    const [pageList, setPageList] = useState([])\r\n\r\n    const queryPages = () => {\r\n        service.get('/hexopro/api/pages/list?deleted=' + false)\r\n            .then(res => {\r\n                const result = res.data.map((obj, i) => {\r\n                    return { _id: obj._id, title: obj.title, cover: obj.cover, date: obj.date, permalink: obj.permalink, updated: obj.updated, key: i + 1 }\r\n                });\r\n                setPageList(result)\r\n            })\r\n    }\r\n\r\n    const columns: TableProps<DataType>['columns'] = [\r\n        {\r\n            title: '封面',\r\n            dataIndex: 'cover',\r\n            render: (col, item, index) => {\r\n                return (<Image width={64} height={42.56} src={item.cover} />)\r\n            }\r\n        },\r\n        {\r\n            title: '博客名称',\r\n            dataIndex: 'title',\r\n            filterDropdown: ({ setSelectedKeys, selectedKeys, confirm }) => {\r\n                return (\r\n                    <div className='arco-table-custom-filter'>\r\n                        <Input.Search\r\n                            ref={inputRef}\r\n                            placeholder='Please enter name'\r\n                            value={selectedKeys[0] || ''}\r\n                            onChange={(value) => {\r\n                                setSelectedKeys(value.target.value ? [value.target.value] : []);\r\n                            }}\r\n                            onSearch={() => {\r\n                                confirm();\r\n                            }}\r\n                        />\r\n                    </div>\r\n                );\r\n            },\r\n            onFilter: (value, row) => (value ? row.title.indexOf(value as string) !== -1 : true),\r\n            onFilterDropdownVisibleChange: (visible) => {\r\n                if (visible) {\r\n                    setTimeout(() => inputRef.current.focus(), 150);\r\n                }\r\n            },\r\n        },\r\n        {\r\n            title: '链接',\r\n            dataIndex: 'permalink',\r\n            render: (col, item, index) => {\r\n                return (<a href={decodeURIComponent(item.permalink)} target='_blank'>{decodeURIComponent(item.permalink)}</a>)\r\n            }\r\n        },\r\n        {\r\n            title: '发布时间',\r\n            dataIndex: 'date',\r\n        },\r\n        {\r\n            title: '更新时间',\r\n            dataIndex: 'updated',\r\n        },\r\n        {\r\n            title: '操作',\r\n            dataIndex: 'option',\r\n            render: (col, item, index) => {\r\n                return (\r\n                    <Space>\r\n                        <Link to={`/page/${item._id}`}>\r\n                            <Button type='primary' >编辑</Button>\r\n                        </Link>\r\n                    </Space>\r\n\r\n                )\r\n            }\r\n        }\r\n    ]\r\n\r\n    useEffect(() => {\r\n        queryPages()\r\n        return () => {\r\n            // 在组件卸载时执行清理操作，取消异步任务等\r\n        };\r\n    }, []);\r\n\r\n    return (\r\n        <div>\r\n            <Card style={{ height: '100%' }}>\r\n                <Table columns={columns} dataSource={pageList} />\r\n            </Card>\r\n        </div>\r\n\r\n    );\r\n\r\n}"],"names":["Pages","inputRef","useRef","_useState2","_slicedToArray","useState","pageList","setPageList","columns","title","dataIndex","render","col","item","index","React","Image","width","height","src","cover","filterDropdown","_ref","setSelectedKeys","selectedKeys","confirm","className","Input","Search","ref","placeholder","value","onChange","target","onSearch","onFilter","row","indexOf","onFilterDropdownVisibleChange","visible","setTimeout","current","focus","href","decodeURIComponent","permalink","Space","Link","to","concat","_id","Button","type","useEffect","service","then","res","result","data","map","obj","i","date","updated","key","Card","style","Table","dataSource"],"sourceRoot":""}