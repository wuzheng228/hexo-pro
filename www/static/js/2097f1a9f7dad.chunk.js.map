{"version":3,"file":"static/js/2097f1a9f7dad.chunk.js","mappings":"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","sources":["webpack://hexo-pro/./client/src/components/Vditor/index.tsx","webpack://hexo-pro/./client/src/pages/content/components/EditorHeader.tsx","webpack://hexo-pro/./client/src/pages/content/components/frontMatterAdder.tsx","webpack://hexo-pro/./client/src/pages/content/pages/page/index.tsx","webpack://hexo-pro/./client/src/pages/content/pages/page/pageSettings.tsx"],"sourcesContent":["import React, { useEffect, useRef, useState } from 'react';\r\n\r\nimport Vditor from 'vditor';\r\nimport \"vditor/src/assets/less/index.less\"\r\nimport \"./style/index.less\"\r\nimport service from '@/utils/api';\r\n\r\nexport default function HexoProVditor({ initValue, handleChangeContent, handleUploadingImage }) {\r\n\r\n    // 'emoji', 'headings', 'bold', 'italic', 'strike', '|', 'line', 'quote', 'list', 'ordered-list', 'check', 'outdent', 'indent', 'code', 'inline-code', 'insert-after', 'insert-before', 'undo', 'redo', 'upload', 'link', 'table', 'edit-mode', 'preview', 'fullscreen', 'outline', 'export'\r\n\r\n    function uploadImage(image, filename) {\r\n        const promise = new Promise((f, r) => {\r\n            service.post('/hexopro/api/images/upload', { data: image, filename: filename }).then(res => {\r\n                // console.log('image upload resp', res)\r\n                f(res.data)\r\n            }).catch(err => {\r\n                r(err)\r\n            })\r\n        })\r\n        return promise\r\n    }\r\n\r\n\r\n    const [vd, setVd] = useState(undefined);\r\n    const [isUploadingImage, setIsUPloadingImage] = useState(false)\r\n\r\n    const [isEditorFocus, setIsEditorFocus] = useState(false)\r\n\r\n\r\n    useEffect(() => {\r\n        handleUploadingImage(isUploadingImage)\r\n        return () => {\r\n            setIsUPloadingImage(undefined)\r\n        }\r\n    }, [isUploadingImage])\r\n\r\n\r\n    useEffect(() => {\r\n        const vditor = new Vditor('vditor', {\r\n            theme: 'classic',\r\n            height: '100%',\r\n            width: '100%',\r\n            toolbarConfig: {\r\n                pin: false // 确保工具栏固定\r\n            },\r\n            after: () => {\r\n                // 设置初始值\r\n                vditor.setValue(initValue)\r\n\r\n                // 固定toolbar\r\n                const toolbar = document.querySelector('.vditor-toolbar') as HTMLElement;\r\n                const vditorElement = document.getElementById('vditor') as HTMLElement;\r\n                if (toolbar && vditorElement) {\r\n                    toolbar.style.width = `${vditorElement.clientWidth}px`;\r\n                }\r\n\r\n                const content = document.querySelector('vditor-content') as HTMLElement;\r\n                const editorHeader = document.querySelector('.editor-header') as HTMLElement;\r\n                console.log('editorHeader', editorHeader)\r\n                console.log(\"content\", content)\r\n                if (content && toolbar && editorHeader) {\r\n                    console.log('走到这里了')\r\n                    content.style.cssText = `margin-top: ${toolbar.clientHeight + editorHeader.clientHeight}px !important;`;\r\n                }\r\n\r\n                window.addEventListener('resize', () => {\r\n                    if (toolbar && vditorElement) {\r\n                        toolbar.style.width = `${vditorElement.clientWidth}px`;\r\n                        if (content) {\r\n                            content.style.marginTop = `${toolbar.clientHeight + editorHeader.clientHeight}px !important;`;\r\n                        }\r\n                    }\r\n                });\r\n                // const vditorElement = document.querySelector('#vditor > div.vditor-content > div.vditor-ir > pre');\r\n                // console.log(vditorElement)\r\n                // if (vditorElement) {\r\n                //     vditorElement.addEventListener('focus', () => {\r\n                //         console.log('Vditor 编辑器已获得焦点1');\r\n                //     }, true);\r\n                //     vditorElement.addEventListener('blur', () => {\r\n                //         console.log('Vditor 编辑器失去焦点');\r\n                //     }, true);\r\n                // }\r\n            },\r\n            focus: (v: string) => {\r\n                setIsEditorFocus(true)\r\n            },\r\n            blur: (v) => {\r\n                setIsEditorFocus(false)\r\n            },\r\n            upload: {\r\n                multiple: false,\r\n                error: (err: any) => {\r\n                    console.log('err', err)\r\n                },\r\n                validate: (files) => {\r\n                    console.log('validate', files)\r\n                    return true\r\n                },\r\n                format: (files: File[], responseText: string): string => {\r\n                    // 这里可以添加处理文件格式化的逻辑\r\n                    console.log('format', files)\r\n                    return responseText;\r\n                },\r\n                file: (files: File[]): File[] | Promise<File[]> => {\r\n                    console.log('file', files)\r\n                    return null\r\n                },\r\n                handler: (files: File[]): Promise<string | null> => {\r\n                    // 这里可以添加处理文件上传的逻辑\r\n                    console.log(files)\r\n                    for (let file of files) {\r\n                        setIsUPloadingImage(true)\r\n                        const reader = new FileReader();\r\n                        reader.onload = (event) => {\r\n                            const filename = file.name;\r\n                            uploadImage(event.target.result, filename).then((res: { src: string, msg: string }) => {\r\n                                console.log('update=> ', res)\r\n                                res['code'] = 0\r\n\r\n                                let ans = {\r\n                                    \"msg\": res.msg,\r\n                                    \"code\": 0,\r\n                                    \"data\": {\r\n                                        \"errFiles\": [],\r\n                                        \"succMap\": {\r\n                                            filename: res.src,\r\n                                        }\r\n                                    }\r\n                                }\r\n                                setTimeout(() => {\r\n                                    const currentValue = vditor.getValue();\r\n                                    const cursorPosition = vditor.getCursorPosition();\r\n                                    console.log('cursorPosition', cursorPosition)\r\n                                    if (isEditorFocus) {\r\n                                        vditor.setValue(currentValue + `\\n![alt text](${res.src})`)\r\n                                    } else {\r\n                                        vditor.insertValue(`\\n![alt text](${res.src})`)\r\n                                    }\r\n                                    // 重新渲染编辑器内容（如果需要）\r\n                                }, 300);\r\n                                return null\r\n                            }).catch((err) => {\r\n                                console.error('Image upload failed: ', err);\r\n                                return err\r\n                            }).finally(() => {\r\n                                setIsUPloadingImage(false)\r\n                            });\r\n                        };\r\n                        reader.readAsDataURL(file);\r\n                    }\r\n                    return null; // 确保函数返回一个值\r\n                }\r\n            },\r\n            input: (v) => {\r\n                handleChangeContent(vditor.getValue())\r\n            },\r\n            toolbar: [\r\n                {\r\n                    name: 'emoji'\r\n                },\r\n                {\r\n                    name: 'headings'\r\n                },\r\n                {\r\n                    name: 'bold'\r\n                },\r\n                {\r\n                    name: 'italic'\r\n                },\r\n                {\r\n                    name: 'strike'\r\n                },\r\n                {\r\n                    name: 'line'\r\n                },\r\n                {\r\n                    name: 'quote'\r\n                },\r\n                {\r\n                    name: 'list'\r\n                },\r\n                {\r\n                    name: 'ordered-list'\r\n                },\r\n                {\r\n                    name: 'check'\r\n                },\r\n                {\r\n                    name: 'outdent'\r\n                },\r\n                {\r\n                    name: 'indent'\r\n                },\r\n                {\r\n                    name: 'code'\r\n                },\r\n                {\r\n                    name: 'inline-code'\r\n                },\r\n                {\r\n                    name: 'inline-code'\r\n                },\r\n                {\r\n                    name: 'insert-after'\r\n                },\r\n                {\r\n                    name: 'insert-before'\r\n                },\r\n                {\r\n                    name: 'undo'\r\n                },\r\n                {\r\n                    name: 'redo'\r\n                },\r\n                {\r\n                    name: 'upload'\r\n                },\r\n                {\r\n                    name: 'link'\r\n                },\r\n                {\r\n                    name: 'table'\r\n                },\r\n                {\r\n                    name: 'edit-mode',\r\n                },\r\n                {\r\n                    name: 'preview',\r\n                    className: 'toolbar-right'\r\n                },\r\n                {\r\n                    name: 'fullscreen',\r\n                    className: 'toolbar-right'\r\n                },\r\n                {\r\n                    name: 'outline',\r\n                    className: 'toolbar-right'\r\n                },\r\n                {\r\n                    name: 'export',\r\n                    className: 'toolbar-right'\r\n                }\r\n            ]\r\n        });\r\n\r\n\r\n        return () => {\r\n            vd?.destroy();\r\n            setVd(undefined);\r\n        }\r\n    }, [initValue]);\r\n    return (\r\n        <div id='vditorWapper' style={{ width: '100%', height: '100%', flex: 1, backgroundColor: 'blue', borderRadius: '0px' }}>\r\n            <div\r\n                style={{ width: '100%', height: '100%' }}\r\n                id='vditor'\r\n                className='vditor'>\r\n            </div>\r\n        </div >\r\n\r\n    )\r\n}","import { BarsOutlined, DeleteOutlined, SettingOutlined } from \"@ant-design/icons\";\r\nimport { Button, Col, message, Popconfirm, Row } from \"antd\";\r\nimport ButtonGroup from \"antd/es/button/button-group\";\r\nimport React, { useState } from \"react\";\r\nimport cs from 'classnames';\r\n\r\nexport default function EditorHeader({ initTitle, isPage, isDraft, popTitle, popDes, className = '', handleChangeTitle, handleSettingClick, handleRemoveSource, handlePublish }) {\r\n\r\n    return (\r\n        <Row style={{ width: \"100%\", borderBottomColor: 'black', borderBottom: '1px solid gray', backgroundColor: 'white' }} align='middle' className={cs(\"editor-header\", className)}>\r\n            {/* 博客名称输入 */}\r\n            <Col span={12}>\r\n                <input\r\n                    style={{ width: \"100%\", height: 60, border: 'none', outline: 'none', boxSizing: 'border-box', fontSize: 28, fontWeight: 500, marginLeft: 10 }}\r\n                    value={initTitle}\r\n                    onChange={(v) => {\r\n                        handleChangeTitle(v.target.value)\r\n                    }}\r\n                />\r\n            </Col>\r\n            {/* 博客发布按钮 */}\r\n            <Col span={2} offset={9} style={{ alignItems: 'center', justifyContent: 'center', paddingLeft: 50 }}>\r\n                <ButtonGroup>\r\n                    <Button type='default' icon={<SettingOutlined />} onClick={(e) => handleSettingClick(e)} />\r\n                    {\r\n                        isDraft && !isPage ?\r\n                            <Button type='primary' onClick={handlePublish}>发布博客</Button>\r\n                            : <Button type='default' onClick={handlePublish}>转为草稿</Button>\r\n                    }\r\n                    <Popconfirm\r\n                        title={popTitle}\r\n                        description={popDes}\r\n                        onConfirm={() => {\r\n                            message.info({\r\n                                content: 'ok',\r\n                            });\r\n                            handleRemoveSource()\r\n                        }}\r\n                        onCancel={() => {\r\n                            message.error({\r\n                                content: 'cancel',\r\n                            });\r\n                        }}\r\n                    >\r\n                        <Button type='default' icon={<DeleteOutlined />} />\r\n                    </Popconfirm>\r\n                </ButtonGroup>\r\n            </Col>\r\n        </Row>\r\n    )\r\n}","import { Button, Card, Checkbox, Input, Space, Tag, Tooltip } from \"antd\"\r\nimport React from \"react\"\r\nimport { useEffect, useState } from \"react\"\r\n\r\nconst CheckboxGroup = Checkbox.Group\r\n\r\nexport function FrontMatterAdder({ visible, onClose, title, existFrontMatter, frontMatter, onChange }) {\r\n    const [localVisible, setLocalVisible] = useState(false)\r\n    const [inputFmtKeyValue, setInputFmtKeyValue] = useState('')\r\n    const [inputFmtValueValue, setInputFmtValueValue] = useState('')\r\n\r\n    useEffect(() => {\r\n        setLocalVisible(visible)\r\n    }, [visible])\r\n\r\n    const exitsFontMatter = () => {\r\n        const fmkeys = Object.keys(existFrontMatter)\r\n        return (\r\n            <CheckboxGroup onChange={(v) => {\r\n                const newfmt = {}\r\n                v.forEach(name => {\r\n                    newfmt[name] = !exitsFontMatter[name] ? null : exitsFontMatter[name]\r\n                })\r\n                onChange(newfmt)\r\n            }} value={Object.keys(frontMatter)}>\r\n                {\r\n                    fmkeys.map((item, i) => {\r\n                        return (\r\n                            <Checkbox key={item} value={({ checked }) => {\r\n                                return (\r\n                                    <Tooltip key={item} title={!frontMatter[item] ? 'unset' : frontMatter[item]}>\r\n                                        <Tag key={item} color={checked ? 'purple' : ''} style={{ marginBottom: 5 }}>\r\n                                            {item}\r\n                                        </Tag>\r\n                                    </Tooltip>\r\n\r\n                                );\r\n                            }} />\r\n                        );\r\n                    })}\r\n            </CheckboxGroup>\r\n        )\r\n    }\r\n\r\n    const onInputEnterKeyPress = () => {\r\n        if (inputFmtKeyValue.trim().length == 0) {\r\n            return\r\n        }\r\n        const newFmt = { ...frontMatter }\r\n        newFmt[inputFmtKeyValue] = inputFmtValueValue\r\n        onChange(newFmt)\r\n    }\r\n\r\n    const addFrontMatter = () => {\r\n        return (\r\n            <div style={{ display: 'flex', alignItems: 'center' }}>\r\n                <Space>\r\n                    <Input style={{ flex: 1 }} placeholder=\"frontMatter Key\" value={inputFmtKeyValue} onChange={(v) => setInputFmtKeyValue(v.target.value)} onPressEnter={onInputEnterKeyPress} />\r\n                    <Input style={{ flex: 1 }} placeholder=\"frontMatter value\" value={inputFmtValueValue} onChange={(v) => setInputFmtValueValue(v.target.value)} onPressEnter={onInputEnterKeyPress} />\r\n                    <Button type='default' onClick={() => {\r\n                        setLocalVisible(false)\r\n                        onClose()\r\n                    }}>X</Button>\r\n                </Space>\r\n            </div>\r\n\r\n        )\r\n    }\r\n\r\n    return (\r\n        localVisible &&\r\n        <Card title={title} bordered={true} hoverable={true} style={{ position: 'absolute', top: '100%', zIndex: 100, width: '600px' }} extra={addFrontMatter()}>\r\n            {exitsFontMatter()}\r\n        </Card>\r\n    )\r\n}","\r\nimport MarkDownEditor from '@/components/markdownEditor';\r\nimport { service } from '@/utils/api';\r\nimport React, { useEffect, useRef, useState, createElement, Fragment, ReactNode } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport _ from 'lodash';\r\nimport { PageSettings } from './pageSettings';\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport HexoProVditor from '@/components/Vditor';\r\nimport EditorHeader from '../../components/EditorHeader';\r\nimport useLocale from '@/hooks/useLocale';\r\n\r\n\r\ntype Page = {\r\n    isDraft: boolean\r\n    isDiscarded: boolean\r\n    source: string\r\n}\r\n\r\nfunction Page() {\r\n    const navigate = useNavigate();\r\n    const postRef = useRef(null);\r\n    const { _id } = useParams();\r\n    const [page, setPage] = useState({ isDraft: true, source: null });\r\n    const [pageMetaData, setPageMetadata] = useState({ tags: [], categories: [], frontMatter: {}, source: '' })\r\n    const [fmtKeys, setFmtKeys] = useState([])\r\n    const [doc, setDoc] = useState('');\r\n    const [title, setTitle] = useState('');\r\n    const [initialRaw, setInitialRaw] = useState('');\r\n    // const [rendered, setRendered] = useState('');\r\n    const [update, setUpdate] = useState({});\r\n    const [visible, setVisible] = useState(false)\r\n    const t = useLocale()\r\n\r\n    const queryPageById = (_id) => {\r\n        return new Promise((resolve, reject) => {\r\n            service.get('/hexopro/api/pages/' + _id).then((res) => {\r\n                resolve(res.data)\r\n            }).catch(err => {\r\n                reject(err)\r\n            })\r\n        })\r\n    }\r\n\r\n    const postMeta = () => {\r\n        return new Promise((resolve, reject) => {\r\n            service.get('/hexopro/api/pageMeta/' + _id).then((res) => {\r\n                resolve(res.data)\r\n            }).catch(err => {\r\n                reject(err)\r\n            })\r\n        })\r\n    }\r\n\r\n    const fetch = () => {\r\n        return {\r\n            page: queryPageById(_id),\r\n            pageMeta: postMeta()\r\n        }\r\n    }\r\n\r\n    const dataDidLoad = (name, data) => {\r\n        if (name == 'pageMeta') {\r\n            setPageMetadata(data)\r\n            setFmtKeys(Object.keys(data.frontMatter))\r\n            return\r\n        }\r\n\r\n        if (name == 'page') {\r\n            // console.log('dataLoad', data)\r\n            const parts = data.raw.split('---')\r\n            const _slice = parts[0] === '' ? 2 : 1;\r\n            const raw = parts.slice(_slice).join('---').trim();\r\n            setTitle(data.title)\r\n            setInitialRaw(raw)\r\n            // setRendered(raw)\r\n            setPage(data)\r\n            const content = (data)._content;\r\n            setDoc(content)\r\n        }\r\n    }\r\n\r\n    const handleChange = (update) => {\r\n        // var now = moment()\r\n        const promise = new Promise((resolve, reject) => {\r\n            service.post('/hexopro/api/pages/' + _id, update).then((res) => {\r\n                resolve(res.data)\r\n            }).catch(err => {\r\n                reject(err)\r\n            })\r\n        })\r\n        return promise\r\n    }\r\n\r\n    const handleChangeTitle = (v) => {\r\n        if (v == title) {\r\n            return\r\n        }\r\n        setTitle(v)\r\n        postRef.current({ title: v })\r\n    }\r\n\r\n    const handleChangeContent = (text) => {\r\n        // if (text === rendered) {\r\n        //     return\r\n        // }\r\n        // setRendered(text)\r\n        postRef.current({ _content: text })\r\n    }\r\n\r\n    const removePage = () => {\r\n        const promise = new Promise((resolve, reject) => {\r\n            service.get('/hexopro/api/pages/' + _id + '/remove').then((res) => {\r\n                resolve(res.data)\r\n            }).catch(err => {\r\n                reject(err)\r\n            })\r\n        })\r\n        navigate(`/pages`);\r\n    }\r\n\r\n    const publish = () => {\r\n        const res = handlePublish()\r\n        res.then((data: Page) => {\r\n            setPage(data)\r\n        }).catch(err => {\r\n            console.log(err)\r\n        })\r\n    }\r\n\r\n    const handlePublish = () => {\r\n        if (!page.isDraft) {\r\n            return\r\n        }\r\n        return new Promise((resolve, reject) => {\r\n            console.log('publish blog')\r\n            service.post('/hexopro/api/pages/' + _id + '/publish').then((res) => {\r\n                resolve(res.data)\r\n            }).catch(err => {\r\n                reject(err)\r\n            })\r\n        })\r\n    }\r\n\r\n    const unpublish = () => {\r\n        const res = handleUnpublish()\r\n        res.then((data: Page) => {\r\n            setPage(data)\r\n        }).catch(err => {\r\n            console.log(err)\r\n        })\r\n    }\r\n\r\n    const handleUnpublish = () => {\r\n        if (page.isDraft) {\r\n            return\r\n        }\r\n        return new Promise((resolve, reject) => {\r\n            console.log('unpublish blog')\r\n            service.post('/hexopro/api/pages/' + _id + '/unpublish').then((res) => {\r\n                resolve(res.data)\r\n            }).catch(err => {\r\n                reject(err)\r\n            })\r\n        })\r\n    }\r\n\r\n    const handleUpdate = (update) => {\r\n        return new Promise((resolve, reject) => {\r\n            service.post('/hexopro/api/pages/' + _id, update).then((res) => {\r\n                resolve(res.data)\r\n            }).catch(err => {\r\n                reject(err)\r\n            })\r\n        })\r\n    }\r\n\r\n\r\n    const handleUploadingImage = (isUploading: boolean) => {\r\n        console.log('handleUploadingImage', isUploading)\r\n    }\r\n\r\n\r\n    useEffect(() => {\r\n        const items = fetch()\r\n        Object.keys(items).forEach((name) => {\r\n            Promise.resolve(items[name]).then((data) => {\r\n                const update = {}\r\n                update[name] = data\r\n                setUpdate(update)\r\n                if (dataDidLoad) {\r\n                    dataDidLoad(name, data)\r\n                }\r\n            })\r\n        })\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        const p = _.debounce((update) => {\r\n            handleUpdate(update)\r\n        }, 1000, { trailing: true, loading: true });\r\n        postRef.current = p\r\n    }, []);\r\n\r\n    // const [editorRef, editorView] = MarkDownEditor({ initialValue: doc, adminSettings: { editor: { lineNumbers: true } }, setRendered, handleChangeContent, handleScroll, forceLineNumbers: lineNumber })\r\n    return (\r\n        <div style={{ width: \"100%\", height: \"100%\", display: \"flex\", flexDirection: \"column\", backgroundColor: 'blue', overflowY: 'auto' }}>\r\n            <EditorHeader\r\n                isPage={true}\r\n                isDraft={false}\r\n                handlePublish={() => { }}\r\n                initTitle={title}\r\n                popTitle={t['editor.header.pop.title']}\r\n                popDes={t['page.editor.header.pop.des']}\r\n                handleChangeTitle={handleChangeTitle}\r\n                handleSettingClick={(v) => setVisible(true)}\r\n                handleRemoveSource={removePage}\r\n            />\r\n            <div style={{ backgroundColor: 'red', width: \"100%\", flex: 1, padding: 0, border: 'none' }}>\r\n                <HexoProVditor initValue={doc} handleChangeContent={handleChangeContent} handleUploadingImage={handleUploadingImage} />\r\n            </div>\r\n            <PageSettings\r\n                visible={visible}\r\n                setVisible={setVisible}\r\n                pageMeta={pageMetaData}\r\n                setPageMeta={setPageMetadata}\r\n                handleChange={handleChange}\r\n            />\r\n        </div >\r\n    )\r\n}\r\n\r\nexport default Page","import React, { useEffect, useState } from \"react\";\r\nimport { post } from \"@/utils/api\";\r\nimport { Button, Col, Input, message, Modal, Row, Space, Tag, Tooltip } from \"antd\";\r\nimport { FrontMatterAdder } from \"../../components/frontMatterAdder\";\r\n\r\nexport function PageSettings({ visible, setVisible, pageMeta, setPageMeta, handleChange }) {\r\n    // 添加使用的状态\r\n    const [fmOpenStat, setFmOpenStat] = useState(false)\r\n    const [originFms, setOriginFms] = useState([])\r\n\r\n    const fmtClose = (v) => {\r\n        const newfmt = {}\r\n        Object.keys(pageMeta.frontMatter).forEach(key => {\r\n            if (key === v) {\r\n                return\r\n            }\r\n            newfmt[key] = pageMeta.frontMatter[key]\r\n        })\r\n        const meta = { ...pageMeta, frontMatter: newfmt }\r\n        setPageMeta(meta)\r\n    }\r\n\r\n    function isPathValid(path) {\r\n        // 匹配以.md为扩展名的文件名，并且路径只包含合法字符（字母、数字、斜杠、下划线和短横线）\r\n        const regex = /^([a-zA-Z0-9-_\\/]+)\\/([a-zA-Z0-9-_]+\\.md)$/i; // i标志表示不区分大小写\r\n        return regex.test(path);\r\n    }\r\n\r\n    return (\r\n        <Modal\r\n            title={\r\n                <div style={{ textAlign: 'left' }}>\r\n                    文章属性\r\n                </div>\r\n            }\r\n            visible={visible}\r\n            onCancel={() => {\r\n                setPageMeta({ ...pageMeta, tags: [], categories: [], frontMatter: originFms });\r\n                setVisible(false);\r\n            }}\r\n            onOk={() => {\r\n                if (!isPathValid(pageMeta.source)) {\r\n                    message.error('配置的页面路径非法请检查！')\r\n                } else {\r\n                    setVisible(false);\r\n                    handleChange({ frontMatter: pageMeta.frontMatter, source: pageMeta.source })\r\n                }\r\n            }}\r\n            afterOpenChange={() => {\r\n                setOriginFms(pageMeta.frontMatter);\r\n            }}\r\n            style={{ width: 800 }}\r\n        >\r\n            <Row style={{ marginTop: 15, marginBottom: 15 }}>\r\n                <Col>\r\n                    <Space style={{ width: '100', flexWrap: 'wrap' }}>\r\n                        {\r\n                            /* 遍历渲染已有的fontMatter */\r\n                            Object.keys(pageMeta.frontMatter).map((item) => {\r\n                                return (\r\n                                    <Tooltip key={item} title={!pageMeta.frontMatter[item] ? 'unset' : pageMeta.frontMatter[item]}>\r\n                                        <Tag closable onClose={() => fmtClose(item)} key={item} color=\"blue\" style={{ marginBottom: 5 }}>{item}</Tag>\r\n                                    </Tooltip>\r\n\r\n                                )\r\n                            })\r\n                        }\r\n                        <Button type='dashed'\r\n                            onClick={() => {\r\n                                setFmOpenStat(!fmOpenStat)\r\n                            }}\r\n                        >+自定义frontMatter</Button>\r\n                    </Space>\r\n\r\n                    {\r\n                        /* todo 打开添加标签的界面 */\r\n                        <FrontMatterAdder existFrontMatter={originFms} onClose={() => { setFmOpenStat(false) }} visible={fmOpenStat} title={'Font-Matter'} frontMatter={pageMeta.frontMatter} onChange={\r\n                            (v) => {\r\n                                const meta = { ...pageMeta, frontMatter: v }\r\n                                setPageMeta(meta)\r\n                            }\r\n                        } />\r\n                    }\r\n                </Col>\r\n            </Row>\r\n            <Row style={{ marginTop: 15, marginBottom: 15 }}>\r\n                <Col>\r\n                    <Input style={{ width: 350 }} allowClear placeholder='请输入页面存放路径' value={pageMeta.source} onChange={(v) => {\r\n                        const newMeta = { ...pageMeta, source: v }\r\n                        setPageMeta(newMeta)\r\n                    }} />\r\n                </Col>\r\n            </Row>\r\n        </Modal>\r\n    )\r\n}"],"names":["HexoProVditor","_ref","initValue","handleChangeContent","handleUploadingImage","_useState2","_slicedToArray","useState","undefined","vd","setVd","_useState4","isUploadingImage","setIsUPloadingImage","_useState6","isEditorFocus","setIsEditorFocus","useEffect","vditor","Vditor","theme","height","width","toolbarConfig","pin","after","setValue","toolbar","document","querySelector","vditorElement","getElementById","style","concat","clientWidth","content","editorHeader","console","log","cssText","clientHeight","window","addEventListener","marginTop","focus","v","blur","upload","multiple","error","err","validate","files","format","responseText","file","handler","_step","_iterator","_createForOfIteratorHelper","_loop","value","reader","FileReader","onload","event","filename","name","image","Promise","f","r","service","data","then","res","uploadImage","target","result","msg","src","setTimeout","currentValue","getValue","cursorPosition","getCursorPosition","insertValue","readAsDataURL","s","n","done","e","input","className","destroy","React","id","flex","backgroundColor","borderRadius","EditorHeader","initTitle","isPage","isDraft","popTitle","popDes","_ref$className","handleChangeTitle","handleSettingClick","handleRemoveSource","handlePublish","Row","borderBottomColor","borderBottom","align","cs","Col","span","border","outline","boxSizing","fontSize","fontWeight","marginLeft","onChange","offset","alignItems","justifyContent","paddingLeft","ButtonGroup","Button","type","icon","SettingOutlined","onClick","Popconfirm","title","description","onConfirm","message","info","onCancel","DeleteOutlined","CheckboxGroup","Checkbox","Group","FrontMatterAdder","visible","onClose","existFrontMatter","frontMatter","localVisible","setLocalVisible","inputFmtKeyValue","setInputFmtKeyValue","inputFmtValueValue","setInputFmtValueValue","exitsFontMatter","fmkeys","Object","keys","newfmt","forEach","map","item","i","key","_ref2","checked","Tooltip","Tag","color","marginBottom","onInputEnterKeyPress","trim","length","newFmt","_objectSpread","Card","bordered","hoverable","position","top","zIndex","extra","display","Space","Input","placeholder","onPressEnter","navigate","useNavigate","postRef","useRef","_id","useParams","source","setPage","tags","categories","pageMetaData","setPageMetadata","setFmtKeys","_useState8","doc","setDoc","_useState10","setTitle","_useState12","setInitialRaw","_useState14","setUpdate","_useState16","setVisible","t","useLocale","queryPageById","resolve","reject","get","dataDidLoad","parts","raw","split","_slice","slice","join","_content","items","page","pageMeta","update","p","_","post","handleUpdate","trailing","loading","current","flexDirection","overflowY","padding","text","isUploading","PageSettings","setPageMeta","handleChange","fmOpenStat","setFmOpenStat","originFms","setOriginFms","Modal","textAlign","onOk","path","test","afterOpenChange","flexWrap","closable","meta","fmtClose","allowClear","newMeta"],"sourceRoot":""}