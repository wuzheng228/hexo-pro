{"version":3,"file":"static/js/3739882741a0a.chunk.js","mappings":"gtCAGA,IAAMA,EAAgBC,EAAAA,EAASC,MAExB,SAASC,EAAQC,GAA0E,IAAvEC,EAASD,EAATC,UAAWC,EAAIF,EAAJE,KAAMC,EAAQH,EAARG,SAAUC,EAAOJ,EAAPI,QAASC,EAAOL,EAAPK,QAASC,EAASN,EAATM,UAAWC,EAAWP,EAAXO,YAEzBC,EAAAC,GAAZC,EAAAA,EAAAA,UAAS,IAAG,GAA/CC,EAAaH,EAAA,GAAEI,EAAgBJ,EAAA,GACmBK,EAAAJ,GAAjBC,EAAAA,EAAAA,UAASL,GAAQ,GAAlDS,EAAYD,EAAA,GAAEE,EAAeF,EAAA,IAEpCG,EAAAA,EAAAA,YAAU,WAEND,EAAgBV,EACpB,GAAG,CAACA,IAEJ,IAcUY,EA4CV,OACIH,GACAI,EAAAA,cAACC,EAAAA,EAAI,CACDC,MAAOd,EACPe,UAAU,EACVC,WAAW,EACXC,MAAO,CAAEC,SAAU,WAAYC,OAAQ,IAAKC,MAAO,SACnDC,MA7BAT,EAAAA,cAAA,OAAKK,MAAO,CAAEG,MAAO,OAAQE,QAAS,SAClCV,EAAAA,cAACW,EAAAA,EAAK,CACFN,MAAO,CAAEO,KAAM,GACfvB,YAAaA,EACbwB,MAAOpB,EACPqB,SAAU,SAACC,GAAC,OAAKrB,EAAiBqB,EAAEC,OAAOH,MAAM,EACjDI,aAAc,SAACF,IA1Cb,SAACA,GACf,IAAMG,EAAaH,EAAEC,OAAOH,MAC5B,GAAyB,IAArBK,EAAWC,OAAf,CAIA,IAAMC,EAAS,IAAIC,IAAIrC,GACvBoC,EAAOE,IAAIJ,GACXjC,EAASsC,MAAMC,KAAKJ,IACpB1B,EAAiB,GAJjB,MAFIA,EAAiB,GAOzB,CAgCuC+B,CAAUV,EAAG,IAExCf,EAAAA,cAAC0B,EAAAA,GAAM,CACHC,KAAK,UACLtB,MAAO,CAAEuB,WAAY,OACrBC,QAAS,WACLhC,GAAiBV,GACjBD,GACJ,GACH,OAgBLc,EAAAA,cAAA,OAAKK,MAAO,CAAEyB,UAAW,QAASC,UAAW,UArD3ChC,EAAU,GAChBiC,OAAOC,KAAKlD,GAAWmD,SAAQ,SAACC,GAC5BpC,EAAQqC,KAAKrD,EAAUoD,GAC3B,IAEInC,EAAAA,cAACtB,EAAa,CACVqB,QAASA,EAAQsC,KAAI,SAACC,EAAMC,GAAC,MAAM,CAC/BC,MACIxC,EAAAA,cAACyC,EAAAA,EAAG,CAACC,MAAO1D,EAAK2D,SAASL,GAAQ,SAAW,GAAIjC,MAAO,CAAEuC,aAAc,IACnEN,GAGTzB,MAAOyB,EACV,IACDzB,MAAO7B,EACP8B,SAAU,SAACC,GAAQ9B,EAAS8B,EAAG,MA2C/C,C","sources":["webpack://hexo-pro-client/./client/src/pages/content/posts/post/tagAdder.tsx"],"sourcesContent":["import { Button, Card, Checkbox, Input, Tag } from \"antd\"\r\nimport React, { useEffect, useState } from \"react\"\r\n\r\nconst CheckboxGroup = Checkbox.Group\r\n\r\nexport function TagAdder({ existTags, tags, onchange, onClose, visible, cardTitle, placeholder }) {\r\n\r\n    const [tagInputValue, setTagInputValue] = useState('')\r\n    const [localVisible, setLocalVisible] = useState(visible)\r\n\r\n    useEffect(() => {\r\n        // 当外部的 visible 发生变化时，同步更新本地的状态\r\n        setLocalVisible(visible)\r\n    }, [visible])\r\n\r\n    const addNewTag = (v) => {\r\n        const inputValue = v.target.value\r\n        if (inputValue.trim() == '') {\r\n            setTagInputValue('')\r\n            return\r\n        }\r\n        const tagSet = new Set(tags)\r\n        tagSet.add(inputValue)\r\n        onchange(Array.from(tagSet))\r\n        setTagInputValue('')\r\n    }\r\n\r\n\r\n    function tagModified() {\r\n        const options = []\r\n        Object.keys(existTags).forEach((name) => {\r\n            options.push(existTags[name])\r\n        })\r\n        return (\r\n            <CheckboxGroup\r\n                options={options.map((item, i) => ({\r\n                    label: (\r\n                        <Tag color={tags.includes(item) ? 'purple' : ''} style={{ marginBottom: 5 }}>\r\n                            {item}\r\n                        </Tag>\r\n                    ),\r\n                    value: item\r\n                }))}\r\n                value={tags}\r\n                onChange={(v) => { onchange(v) }}\r\n            />\r\n        )\r\n    }\r\n\r\n    function addTag() {\r\n        return (\r\n            <div style={{ width: '100%', display: 'flex' }}>\r\n                <Input\r\n                    style={{ flex: 1 }}\r\n                    placeholder={placeholder}\r\n                    value={tagInputValue}\r\n                    onChange={(v) => setTagInputValue(v.target.value)}\r\n                    onPressEnter={(v) => { addNewTag(v) }}\r\n                />\r\n                <Button\r\n                    type=\"default\"\r\n                    style={{ marginLeft: '5px' }}\r\n                    onClick={() => {\r\n                        setLocalVisible(!visible)\r\n                        onClose()\r\n                    }}\r\n                >\r\n                    X\r\n                </Button>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    return (\r\n        localVisible &&\r\n        <Card\r\n            title={cardTitle}\r\n            bordered={true}\r\n            hoverable={true}\r\n            style={{ position: 'absolute', zIndex: 999, width: '350px' }}\r\n            extra={addTag()}\r\n        >\r\n            <div style={{ maxHeight: '200px', overflowY: 'auto' }}>\r\n                {tagModified()}\r\n            </div>\r\n        </Card>\r\n    )\r\n}"],"names":["CheckboxGroup","Checkbox","Group","TagAdder","_ref","existTags","tags","onchange","onClose","visible","cardTitle","placeholder","_useState2","_slicedToArray","useState","tagInputValue","setTagInputValue","_useState4","localVisible","setLocalVisible","useEffect","options","React","Card","title","bordered","hoverable","style","position","zIndex","width","extra","display","Input","flex","value","onChange","v","target","onPressEnter","inputValue","trim","tagSet","Set","add","Array","from","addNewTag","Button","type","marginLeft","onClick","maxHeight","overflowY","Object","keys","forEach","name","push","map","item","i","label","Tag","color","includes","marginBottom"],"sourceRoot":""}