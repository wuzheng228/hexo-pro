{"version":3,"file":"static/js/377bd8299179d.chunk.js","mappings":"imEAIA,IAAMA,EAAgBC,EAAAA,EAASC,MAExB,SAASC,EAAgBC,GAAuE,IAApEC,EAAOD,EAAPC,QAASC,EAAOF,EAAPE,QAASC,EAAKH,EAALG,MAAOC,EAAgBJ,EAAhBI,iBAAkBC,EAAWL,EAAXK,YAAaC,EAAQN,EAARM,SAChCC,EAAAC,GAAfC,EAAAA,EAAAA,WAAS,GAAM,GAAhDC,EAAYH,EAAA,GAAEI,EAAeJ,EAAA,GACwBK,EAAAJ,GAAZC,EAAAA,EAAAA,UAAS,IAAG,GAArDI,EAAgBD,EAAA,GAAEE,EAAmBF,EAAA,GACoBG,EAAAP,GAAZC,EAAAA,EAAAA,UAAS,IAAG,GAAzDO,EAAkBD,EAAA,GAAEE,EAAqBF,EAAA,IAEhDG,EAAAA,EAAAA,YAAU,WACNP,EAAgBV,EACpB,GAAG,CAACA,IAEJ,IACUkB,EACAC,EAyBJC,EAAuB,WACzB,GAAsC,GAAlCR,EAAiBS,OAAOC,OAA5B,CAGA,IAAMC,E,+VAAMC,CAAA,GAAQpB,GACpBmB,EAAOX,GAAoBG,EAC3BV,EAASkB,EAHT,CAIJ,EAkBA,OACId,GACAgB,EAAAA,cAACC,EAAAA,EAAI,CAACxB,MAAOA,EAAOyB,UAAU,EAAMC,WAAW,EAAMC,MAAO,CAAEC,SAAU,WAAYC,IAAK,OAAQC,OAAQ,IAAKC,MAAO,SAAWC,MAhB5HT,EAAAA,cAAA,OAAKI,MAAO,CAAEM,QAAS,OAAQC,WAAY,WACvCX,EAAAA,cAACY,EAAAA,EAAK,KACFZ,EAAAA,cAACa,EAAAA,EAAK,CAACT,MAAO,CAAEU,KAAM,GAAKC,YAAY,kBAAkBC,MAAO7B,EAAkBP,SAAU,SAACqC,GAAC,OAAK7B,EAAoB6B,EAAEC,OAAOF,MAAM,EAAEG,aAAcxB,IACtJK,EAAAA,cAACa,EAAAA,EAAK,CAACT,MAAO,CAAEU,KAAM,GAAKC,YAAY,oBAAoBC,MAAO1B,EAAoBV,SAAU,SAACqC,GAAC,OAAK1B,EAAsB0B,EAAEC,OAAOF,MAAM,EAAEG,aAAcxB,IAC5JK,EAAAA,cAACoB,EAAAA,GAAM,CAACC,KAAK,UAAUC,QAAS,WAC5BrC,GAAgB,GAChBT,GACJ,GAAG,SA5CTiB,EAAS8B,OAAOC,KAAK9C,GACrBgB,EAAU,GAEhBD,EAAOgC,SAAQ,SAACC,EAAMC,GAClBjC,EAAQkC,KAAK,CACTC,MACI7B,EAAAA,cAAC8B,EAAAA,EAAO,CAACC,IAAKJ,EAAGlD,MAAQE,EAAY+C,GAAkB/C,EAAY+C,GAAtB,SACzC1B,EAAAA,cAACgC,EAAAA,EAAG,CAACC,MAAQtD,EAAY+C,GAAoB,OAAZ,WAAqBA,IAG9DV,MAAOU,GAEf,IAGI1B,EAAAA,cAAC9B,EAAa,CAACwB,QAASA,EAASwC,aAAczC,EAAQb,SAAU,SAACqC,GAC9D,IAAMkB,EAAS,CAAC,EAChBlB,EAAEQ,SAAQ,SAAAC,GACNS,EAAOT,GAAShD,EAAiBgD,GAAehD,EAAiBgD,GAAxB,IAC7C,IACAU,QAAQC,IAAI,SAAUF,GACtBvD,EAASuD,EACb,KAmCZ,C","sources":["webpack://hexo-pro-client/./client/src/pages/content/components/frontMatterAdder.tsx"],"sourcesContent":["import { Button, Card, Checkbox, Input, Space, Tag, Tooltip } from \"antd\"\r\nimport React from \"react\"\r\nimport { useEffect, useState } from \"react\"\r\n\r\nconst CheckboxGroup = Checkbox.Group\r\n\r\nexport function FrontMatterAdder({ visible, onClose, title, existFrontMatter, frontMatter, onChange }) {\r\n    const [localVisible, setLocalVisible] = useState(false)\r\n    const [inputFmtKeyValue, setInputFmtKeyValue] = useState('')\r\n    const [inputFmtValueValue, setInputFmtValueValue] = useState('')\r\n\r\n    useEffect(() => {\r\n        setLocalVisible(visible)\r\n    }, [visible])\r\n\r\n    const exitsFontMatter = () => {\r\n        const fmkeys = Object.keys(existFrontMatter)\r\n        const options = []\r\n\r\n        fmkeys.forEach((name, i) => {\r\n            options.push({\r\n                label: (\r\n                    <Tooltip key={i} title={!frontMatter[name] ? 'unset' : frontMatter[name]}>\r\n                        <Tag color={!frontMatter[name] ? 'default' : 'blue'}>{name}</Tag>\r\n                    </Tooltip>\r\n                ),\r\n                value: name\r\n            })\r\n        })\r\n\r\n        return (\r\n            <CheckboxGroup options={options} defaultValue={fmkeys} onChange={(v) => {\r\n                const newfmt = {}\r\n                v.forEach(name => {\r\n                    newfmt[name] = !existFrontMatter[name] ? null : existFrontMatter[name]\r\n                })\r\n                console.log('newfmt', newfmt)\r\n                onChange(newfmt)\r\n            }} />\r\n        )\r\n    }\r\n\r\n    const onInputEnterKeyPress = () => {\r\n        if (inputFmtKeyValue.trim().length == 0) {\r\n            return\r\n        }\r\n        const newFmt = { ...frontMatter }\r\n        newFmt[inputFmtKeyValue] = inputFmtValueValue\r\n        onChange(newFmt)\r\n    }\r\n\r\n    const addFrontMatter = () => {\r\n        return (\r\n            <div style={{ display: 'flex', alignItems: 'center' }}>\r\n                <Space>\r\n                    <Input style={{ flex: 1 }} placeholder=\"frontMatter Key\" value={inputFmtKeyValue} onChange={(v) => setInputFmtKeyValue(v.target.value)} onPressEnter={onInputEnterKeyPress} />\r\n                    <Input style={{ flex: 1 }} placeholder=\"frontMatter value\" value={inputFmtValueValue} onChange={(v) => setInputFmtValueValue(v.target.value)} onPressEnter={onInputEnterKeyPress} />\r\n                    <Button type='default' onClick={() => {\r\n                        setLocalVisible(false)\r\n                        onClose()\r\n                    }}>X</Button>\r\n                </Space>\r\n            </div>\r\n\r\n        )\r\n    }\r\n\r\n    return (\r\n        localVisible &&\r\n        <Card title={title} bordered={true} hoverable={true} style={{ position: 'absolute', top: '100%', zIndex: 100, width: '600px' }} extra={addFrontMatter()}>\r\n            {exitsFontMatter()}\r\n        </Card>\r\n    )\r\n}"],"names":["CheckboxGroup","Checkbox","Group","FrontMatterAdder","_ref","visible","onClose","title","existFrontMatter","frontMatter","onChange","_useState2","_slicedToArray","useState","localVisible","setLocalVisible","_useState4","inputFmtKeyValue","setInputFmtKeyValue","_useState6","inputFmtValueValue","setInputFmtValueValue","useEffect","fmkeys","options","onInputEnterKeyPress","trim","length","newFmt","_objectSpread","React","Card","bordered","hoverable","style","position","top","zIndex","width","extra","display","alignItems","Space","Input","flex","placeholder","value","v","target","onPressEnter","Button","type","onClick","Object","keys","forEach","name","i","push","label","Tooltip","key","Tag","color","defaultValue","newfmt","console","log"],"sourceRoot":""}