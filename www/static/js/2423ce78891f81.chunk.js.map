{"version":3,"file":"static/js/2423ce78891f81.chunk.js","mappings":"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","sources":["webpack://hexo-pro-client/./node_modules/antd/es/col/index.js","webpack://hexo-pro-client/./node_modules/antd/es/row/index.js","webpack://hexo-pro-client/./client/src/pages/content/components/frontMatterAdder.tsx","webpack://hexo-pro-client/./client/src/pages/content/posts/post/postSetting.tsx","webpack://hexo-pro-client/./client/src/pages/content/posts/post/tagAdder.tsx"],"sourcesContent":["\"use client\";\n\nimport { Col } from '../grid';\nexport default Col;","\"use client\";\n\nimport { Row } from '../grid';\nexport default Row;","import { Button, Card, Checkbox, Input, Tag, Tooltip } from \"antd\"\r\nimport React from \"react\"\r\nimport { useEffect, useState } from \"react\"\r\nimport useDeviceDetect from '../../../hooks/useDeviceDetect'\r\n\r\nconst CheckboxGroup = Checkbox.Group\r\n\r\nexport function FrontMatterAdder({ visible, onClose, title, existFrontMatter, frontMatter, onChange }) {\r\n    const { isMobile } = useDeviceDetect()\r\n    const [localVisible, setLocalVisible] = useState(false)\r\n    const [inputFmtKeyValue, setInputFmtKeyValue] = useState('')\r\n    const [inputFmtValueValue, setInputFmtValueValue] = useState('')\r\n\r\n    useEffect(() => {\r\n        setLocalVisible(visible)\r\n    }, [visible])\r\n\r\n    const existFontMatter = () => {\r\n        const fmkeys = Object.keys(existFrontMatter)\r\n        const options = []\r\n\r\n        fmkeys.forEach((name, i) => {\r\n            options.push({\r\n                label: (\r\n                    <Tooltip key={i} title={!frontMatter[name] ? 'unset' : frontMatter[name]}>\r\n                        <Tag color={!frontMatter[name] ? 'default' : 'blue'}>{name}</Tag>\r\n                    </Tooltip>\r\n                ),\r\n                value: name\r\n            })\r\n        })\r\n\r\n        return (\r\n            <CheckboxGroup options={options} defaultValue={fmkeys} onChange={(v) => {\r\n                const newfmt = {}\r\n                v.forEach(name => {\r\n                    newfmt[name] = !existFrontMatter[name] ? null : existFrontMatter[name]\r\n                })\r\n                console.log('newfmt', newfmt)\r\n                onChange(newfmt)\r\n            }} />\r\n        )\r\n    }\r\n\r\n    const onInputEnterKeyPress = () => {\r\n        if (inputFmtKeyValue.trim().length == 0) {\r\n            return\r\n        }\r\n        const newFmt = { ...frontMatter }\r\n        newFmt[inputFmtKeyValue] = inputFmtValueValue\r\n        onChange(newFmt)\r\n    }\r\n\r\n    const addFrontMatter = () => {\r\n        return (\r\n            <div style={{\r\n                display: 'flex',\r\n                flexDirection: 'column',\r\n                gap: 8,\r\n                width: '100%'\r\n            }}>\r\n                <div style={{\r\n                    display: 'grid',\r\n                    gridTemplateColumns: isMobile ? '1fr 1fr' : '1fr auto auto',\r\n                    gridTemplateRows: isMobile ? 'auto auto' : 'unset',\r\n                    gap: 8,\r\n                    alignItems: 'center'\r\n                }}>\r\n                    <Input\r\n                        placeholder=\"键名\"\r\n                        value={inputFmtKeyValue}\r\n                        onChange={(v) => setInputFmtKeyValue(v.target.value)}\r\n                        onPressEnter={onInputEnterKeyPress}\r\n                        status={!inputFmtKeyValue.trim() ? 'error' : undefined}\r\n                    />\r\n                    <Input\r\n                        placeholder=\"键值\"\r\n                        value={inputFmtValueValue}\r\n                        onChange={(v) => setInputFmtValueValue(v.target.value)}\r\n                        onPressEnter={onInputEnterKeyPress}\r\n                    />\r\n                    <Button\r\n                        type=\"primary\"\r\n                        onClick={onInputEnterKeyPress}\r\n                        disabled={!inputFmtKeyValue.trim()}\r\n                        style={{ minWidth: isMobile ? '100%' : 80 }}\r\n                    >\r\n                        添加\r\n                    </Button>\r\n                </div>\r\n                <Button\r\n                    danger\r\n                    onClick={() => {\r\n                        setLocalVisible(false)\r\n                        onClose()\r\n                    }}\r\n                    style={{ alignSelf: 'flex-end' }}\r\n                >\r\n                    关闭\r\n                </Button>\r\n            </div >\r\n        )\r\n    }\r\n\r\n    return localVisible ? (\r\n        <Card\r\n            title={title}\r\n            bordered={true}\r\n            hoverable={true}\r\n            style={{\r\n                position: 'absolute',\r\n                top: '100%',\r\n                zIndex: 100,\r\n                width: isMobile ? '80vw' : '600px',\r\n                maxWidth: '100vw',\r\n                left: isMobile ? 0 : undefined,\r\n                boxShadow: '0 4px 12px rgba(0,0,0,0.15)'\r\n            }}\r\n            extra={addFrontMatter()}\r\n            bodyStyle={{ padding: isMobile ? 12 : 24 }}\r\n        >\r\n            <div style={{\r\n                maxHeight: '60vh',\r\n                overflowY: 'auto',\r\n                paddingRight: 8\r\n            }}>\r\n                {existFontMatter()}\r\n            </div>\r\n        </Card>\r\n    ) : null\r\n}","import React, { useState } from \"react\"\nimport { TagAdder } from \"./tagAdder\"\nimport { FrontMatterAdder } from \"../../components/frontMatterAdder\"\nimport { Button, Col, Modal, Row, Space, Tag, Tooltip } from \"antd\"\n\n\nexport function PostSettings({ visible, setVisible, tagCatMeta, setTagCatMeta, postMeta, setPostMeta, handleChange }) {\n    // 添加标签使用的状态\n    const [tagOpenStat, setTagOpenStat] = useState(false)\n    const [originTags, setOriginTags] = useState([])\n    const [catOpenStat, setCatOpenStat] = useState(false)\n    const [originCats, setOriginCats] = useState([])\n    const [fmOpenStat, setFmOpenStat] = useState(false)\n    const [originFms, setOriginFms] = useState([])\n\n    // console.log(postMeta)\n\n    const tagClose = (v) => {\n        const newTags = postMeta.tags.filter(item => item !== v)\n        const meta = { ...postMeta, tags: newTags }\n        setPostMeta(meta)\n    }\n\n    const catClose = (v) => {\n        const newCats = postMeta.categories.filter(item => item !== v)\n        const meta = { ...postMeta, categories: newCats }\n        setPostMeta(meta)\n    }\n\n    const fmtClose = (v) => {\n        const newfmt = {}\n        Object.keys(postMeta.frontMatter).forEach(key => {\n            if (key === v) {\n                return\n            }\n            newfmt[key] = postMeta.frontMatter[key]\n        })\n        const meta = { ...postMeta, frontMatter: newfmt }\n        console.log(meta)\n        setPostMeta(meta)\n    }\n\n    return (\n        <Modal\n            title={\n                <div style={{ textAlign: 'left' }}>\n                    文章属性\n                </div>\n            }\n            open={visible}\n            onCancel={() => {\n                setVisible(false)\n                console.log('cancel', originFms)\n                setPostMeta({ ...postMeta, tags: originTags, categories: originCats, frontMatter: originFms })\n            }}\n            onOk={() => {\n                setVisible(false)\n                handleChange({ tags: postMeta.tags, categories: postMeta.categories, frontMatter: postMeta.frontMatter })\n            }}\n            afterOpenChange={() => {\n                setOriginTags(postMeta.tags)\n                setOriginCats(postMeta.categories)\n                setOriginFms(postMeta.frontMatter)\n            }}\n            style={{ width: 800 }}\n        >\n            <Row style={{ width: '100%' }}>\n                <Col>\n                </Col>\n                <Col style={{ width: '100%' }}>\n                    <Space style={{ width: '100%', flexWrap: 'wrap' }}>\n                        {\n                            // 循环填充当前已有的标签\n                            postMeta.tags.map((item) => {\n                                return <Tag key={item} closable onClose={() => tagClose(item)} color=\"blue\" style={{ marginBottom: 5 }}>{item}</Tag>\n                            })\n                        }\n                        <Button type='dashed' onClick={() => {\n                            setTagOpenStat(!tagOpenStat)\n                            setCatOpenStat(false)\n                            setFmOpenStat(false)\n                        }}>+添加标签</Button>\n                    </Space>\n                    {/* todo 打开添加标签的界面 */}\n                    {\n                        <TagAdder existTags={tagCatMeta.tags} tags={postMeta.tags} onchange={(v) => {\n                            const meta = { ...postMeta, tags: v }\n                            console.log(v)\n                            setPostMeta(meta)\n                        }} visible={tagOpenStat} cardTitle={'标签'} placeholder={'请输入标签...'} onClose={() => setTagOpenStat(false)} />\n                    }\n                </Col>\n            </Row>\n            <Row style={{ width: '100%', marginTop: 15, marginBottom: 15 }}>\n                <Col style={{ width: '100%' }}>\n                    <Space style={{ width: '100', flexWrap: 'wrap' }}>\n                        {\n                            postMeta.categories.map((item) => {\n                                return <Tag key={item} color=\"blue\" style={{ marginBottom: 5 }} closable onClose={() => catClose(item)}>{item}</Tag>\n                            })\n                        }\n                        <Button type='dashed' onClick={() => {\n                            setCatOpenStat(!catOpenStat)\n                            setFmOpenStat(false)\n                            setTagOpenStat(false)\n                        }}>+添加分类</Button>\n                    </Space>\n                    {\n                        /* todo 打开添加标签的界面 */\n                        <TagAdder existTags={tagCatMeta.categories} tags={postMeta.categories} onchange={(v) => {\n                            const meta = { ...postMeta, categories: v }\n                            setPostMeta(meta)\n                        }} visible={catOpenStat} cardTitle={'分类'} placeholder={'请输入分类...'} onClose={() => setCatOpenStat(false)} />\n                    }\n                </Col>\n            </Row>\n            <Row style={{ marginTop: 15, marginBottom: 15 }}>\n                <Col>\n                    <Space style={{ width: '100', flexWrap: 'wrap' }}>\n                        {\n                            /* 遍历渲染已有的fontMatter */\n                            Object.keys(postMeta.frontMatter).map((item) => {\n                                return (\n                                    <Tooltip key={item} title={!postMeta.frontMatter[item] ? 'unset' : postMeta.frontMatter[item]}>\n                                        <Tag closable onClose={() => fmtClose(item)} key={item} color=\"blue\" style={{ marginBottom: 5 }}>{item}</Tag>\n                                    </Tooltip>\n                                )\n                            })\n                        }\n                        <Button type='dashed'\n                            onClick={() => {\n                                setFmOpenStat(!fmOpenStat)\n                                setTagOpenStat(false)\n                                setCatOpenStat(false)\n                            }}\n                        >+自定义frontMatter</Button>\n                    </Space>\n                    {\n                        /* todo 打开添加标签的界面 */\n                        <FrontMatterAdder existFrontMatter={originFms} onClose={() => { setFmOpenStat(false) }} visible={fmOpenStat} title={'Font-Matter'} frontMatter={postMeta.frontMatter} onChange={\n                            (v) => {\n                                const meta = { ...postMeta, frontMatter: v }\n                                setPostMeta(meta)\n                            }\n                        } />\n                    }\n                </Col>\n            </Row>\n        </Modal>\n    )\n}","import { Button, Card, Checkbox, Input, Tag } from \"antd\"\r\nimport React, { useEffect, useState } from \"react\"\r\nimport useDeviceDetect from '../../../../hooks/useDeviceDetect'\r\n\r\nconst CheckboxGroup = Checkbox.Group\r\n\r\nexport function TagAdder({ existTags, tags, onchange, onClose, visible, cardTitle, placeholder }) {\r\n    const { isMobile } = useDeviceDetect()\r\n    const [tagInputValue, setTagInputValue] = useState('')\r\n    const [localVisible, setLocalVisible] = useState(visible)\r\n\r\n    useEffect(() => {\r\n        // 当外部的 visible 发生变化时，同步更新本地的状态\r\n        setLocalVisible(visible)\r\n    }, [visible])\r\n\r\n    const onInputEnterKeyPress = () => {\r\n        if (tagInputValue.trim() === '') {\r\n            return\r\n        }\r\n        const tagSet = new Set(tags)\r\n        tagSet.add(tagInputValue)\r\n        onchange(Array.from(tagSet))\r\n        setTagInputValue('')\r\n    }\r\n\r\n    const addNewTag = (v) => {\r\n        const inputValue = v.target.value\r\n        if (inputValue.trim() === '') {\r\n            setTagInputValue('')\r\n            return\r\n        }\r\n        const tagSet = new Set(tags)\r\n        tagSet.add(inputValue)\r\n        onchange(Array.from(tagSet))\r\n        setTagInputValue('')\r\n    }\r\n\r\n\r\n    function tagModified() {\r\n        const options = []\r\n        Object.keys(existTags).forEach((name) => {\r\n            options.push(existTags[name])\r\n        })\r\n        return (\r\n            <CheckboxGroup\r\n                options={options.map((item, i) => ({\r\n                    label: (\r\n                        <Tag color={tags.includes(item) ? 'purple' : ''} style={{ marginBottom: 5 }}>\r\n                            {item}\r\n                        </Tag>\r\n                    ),\r\n                    value: item\r\n                }))}\r\n                value={tags}\r\n                onChange={(v) => { onchange(v) }}\r\n            />\r\n        )\r\n    }\r\n\r\n    function addTag() {\r\n        return (\r\n            <div style={{\r\n                display: 'flex',\r\n                flexDirection: 'column',\r\n                gap: 8,\r\n                width: '100%'\r\n            }}>\r\n                <div style={{\r\n                    display: 'grid',\r\n                    gridTemplateColumns: isMobile ? '1fr 1fr' : '1fr auto auto',\r\n                    gridTemplateRows: isMobile ? 'auto auto' : 'unset',\r\n                    gap: 8,\r\n                    alignItems: 'center'\r\n                }}>\r\n                    <Input\r\n                        placeholder={placeholder}\r\n                        value={tagInputValue}\r\n                        onChange={(v) => setTagInputValue(v.target.value)}\r\n                        onPressEnter={(v) => { addNewTag(v) }}\r\n                        status={!tagInputValue.trim() ? 'error' : undefined}\r\n                    />\r\n                    <Button\r\n                        type=\"primary\"\r\n                        onClick={onInputEnterKeyPress}\r\n                        disabled={!tagInputValue.trim()}\r\n                        style={{ minWidth: isMobile ? '100%' : '100%' }}\r\n                    >\r\n                        添加\r\n                    </Button>\r\n                    <Button\r\n                        danger\r\n                        onClick={() => {\r\n                            setLocalVisible(false)\r\n                            onClose()\r\n                        }}\r\n                        style={{ minWidth: isMobile ? '100%' : '100%' }}\r\n                    >\r\n                        关闭\r\n                    </Button>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    return (\r\n        localVisible ? (\r\n            <Card\r\n                title={cardTitle}\r\n                bordered={true}\r\n                hoverable={true}\r\n                style={{\r\n                    position: 'absolute',\r\n                    zIndex: 999,\r\n                    width: isMobile ? '100vw' : '600px',\r\n                    maxWidth: '100%',\r\n                    left: isMobile ? 0 : undefined,\r\n                    boxSizing: 'border-box',\r\n                    boxShadow: '0 4px 12px rgba(0,0,0,0.15)'\r\n                }}\r\n                extra={addTag()}\r\n                bodyStyle={{ padding: isMobile ? 12 : 24 }}\r\n            >\r\n                <div style={{\r\n                    maxHeight: '60vh',\r\n                    overflowY: 'auto',\r\n                    paddingRight: 8\r\n                }}>\r\n                    {tagModified()}\r\n                </div>\r\n            </Card>\r\n        ) : null\r\n    )\r\n}"],"names":["CheckboxGroup","Checkbox","Group","FrontMatterAdder","_ref","visible","onClose","title","existFrontMatter","frontMatter","onChange","isMobile","useDeviceDetect","_useState2","_slicedToArray","useState","localVisible","setLocalVisible","_useState4","inputFmtKeyValue","setInputFmtKeyValue","_useState6","inputFmtValueValue","setInputFmtValueValue","useEffect","fmkeys","options","onInputEnterKeyPress","trim","length","newFmt","_objectSpread","React","Card","bordered","hoverable","style","position","top","zIndex","width","maxWidth","left","undefined","boxShadow","extra","display","flexDirection","gap","gridTemplateColumns","gridTemplateRows","alignItems","Input","placeholder","value","v","target","onPressEnter","status","Button","type","onClick","disabled","minWidth","danger","alignSelf","bodyStyle","padding","maxHeight","overflowY","paddingRight","Object","keys","forEach","name","i","push","label","Tooltip","key","Tag","color","defaultValue","newfmt","console","log","PostSettings","setVisible","tagCatMeta","postMeta","setTagCatMeta","setPostMeta","handleChange","tagOpenStat","setTagOpenStat","originTags","setOriginTags","catOpenStat","setCatOpenStat","_useState8","originCats","setOriginCats","_useState10","fmOpenStat","setFmOpenStat","_useState12","originFms","setOriginFms","Modal","textAlign","open","onCancel","tags","categories","onOk","afterOpenChange","Row","Col","Space","flexWrap","map","item","closable","newTags","filter","meta","marginBottom","TagAdder","existTags","onchange","cardTitle","marginTop","newCats","fmtClose","tagInputValue","setTagInputValue","tagSet","Set","add","Array","from","boxSizing","inputValue","addNewTag","includes"],"sourceRoot":""}