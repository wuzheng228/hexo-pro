{"version":3,"file":"static/js/4230c9dd3e96e.chunk.js","mappings":"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","sources":["webpack://hexo-pro-client/./node_modules/antd/es/col/index.js","webpack://hexo-pro-client/./node_modules/antd/es/row/index.js","webpack://hexo-pro-client/./client/src/pages/content/components/frontMatterAdder.tsx","webpack://hexo-pro-client/./client/src/pages/content/posts/post/postSetting.tsx","webpack://hexo-pro-client/./client/src/pages/content/posts/post/tagAdder.tsx"],"sourcesContent":["\"use client\";\n\nimport { Col } from '../grid';\nexport default Col;","\"use client\";\n\nimport { Row } from '../grid';\nexport default Row;","import { Button, Card, Checkbox, Input, Space, Tag, Tooltip } from \"antd\"\r\nimport React from \"react\"\r\nimport { useEffect, useState } from \"react\"\r\n\r\nconst CheckboxGroup = Checkbox.Group\r\n\r\nexport function FrontMatterAdder({ visible, onClose, title, existFrontMatter, frontMatter, onChange }) {\r\n    const [localVisible, setLocalVisible] = useState(false)\r\n    const [inputFmtKeyValue, setInputFmtKeyValue] = useState('')\r\n    const [inputFmtValueValue, setInputFmtValueValue] = useState('')\r\n\r\n    useEffect(() => {\r\n        setLocalVisible(visible)\r\n    }, [visible])\r\n\r\n    const exitsFontMatter = () => {\r\n        const fmkeys = Object.keys(existFrontMatter)\r\n        const options = []\r\n\r\n        fmkeys.forEach((name, i) => {\r\n            options.push({\r\n                label: (\r\n                    <Tooltip key={i} title={!frontMatter[name] ? 'unset' : frontMatter[name]}>\r\n                        <Tag color={!frontMatter[name] ? 'default' : 'blue'}>{name}</Tag>\r\n                    </Tooltip>\r\n                ),\r\n                value: name\r\n            })\r\n        })\r\n\r\n        return (\r\n            <CheckboxGroup options={options} defaultValue={fmkeys} onChange={(v) => {\r\n                const newfmt = {}\r\n                v.forEach(name => {\r\n                    newfmt[name] = !existFrontMatter[name] ? null : existFrontMatter[name]\r\n                })\r\n                console.log('newfmt', newfmt)\r\n                onChange(newfmt)\r\n            }} />\r\n        )\r\n    }\r\n\r\n    const onInputEnterKeyPress = () => {\r\n        if (inputFmtKeyValue.trim().length == 0) {\r\n            return\r\n        }\r\n        const newFmt = { ...frontMatter }\r\n        newFmt[inputFmtKeyValue] = inputFmtValueValue\r\n        onChange(newFmt)\r\n    }\r\n\r\n    const addFrontMatter = () => {\r\n        return (\r\n            <div style={{ display: 'flex', alignItems: 'center' }}>\r\n                <Space>\r\n                    <Input style={{ flex: 1 }} placeholder=\"frontMatter Key\" value={inputFmtKeyValue} onChange={(v) => setInputFmtKeyValue(v.target.value)} onPressEnter={onInputEnterKeyPress} />\r\n                    <Input style={{ flex: 1 }} placeholder=\"frontMatter value\" value={inputFmtValueValue} onChange={(v) => setInputFmtValueValue(v.target.value)} onPressEnter={onInputEnterKeyPress} />\r\n                    <Button type='default' onClick={() => {\r\n                        setLocalVisible(false)\r\n                        onClose()\r\n                    }}>X</Button>\r\n                </Space>\r\n            </div>\r\n\r\n        )\r\n    }\r\n\r\n    return (\r\n        localVisible &&\r\n        <Card title={title} bordered={true} hoverable={true} style={{ position: 'absolute', top: '100%', zIndex: 100, width: '600px' }} extra={addFrontMatter()}>\r\n            {exitsFontMatter()}\r\n        </Card>\r\n    )\r\n}","import React, { useState } from \"react\"\r\nimport { TagAdder } from \"./tagAdder\"\r\nimport { FrontMatterAdder } from \"../../components/frontMatterAdder\"\r\nimport { Button, Col, Modal, Row, Space, Tag, Tooltip } from \"antd\"\r\n\r\n\r\nexport function PostSettings({ visible, setVisible, tagCatMeta, setTagCatMeta, postMeta, setPostMeta, handleChange }) {\r\n    // 添加标签使用的状态\r\n    const [tagOpenStat, setTagOpenStat] = useState(false)\r\n    const [originTags, setOriginTags] = useState([])\r\n    const [catOpenStat, setCatOpenStat] = useState(false)\r\n    const [originCats, setOriginCats] = useState([])\r\n    const [fmOpenStat, setFmOpenStat] = useState(false)\r\n    const [originFms, setOriginFms] = useState([])\r\n\r\n    // console.log(postMeta)\r\n\r\n    const tagClose = (v) => {\r\n        const newTags = postMeta.tags.filter(item => item !== v)\r\n        const meta = { ...postMeta, tags: newTags }\r\n        setPostMeta(meta)\r\n    }\r\n\r\n    const catClose = (v) => {\r\n        const newCats = postMeta.categories.filter(item => item !== v)\r\n        const meta = { ...postMeta, categories: newCats }\r\n        setPostMeta(meta)\r\n    }\r\n\r\n    const fmtClose = (v) => {\r\n        const newfmt = {}\r\n        Object.keys(postMeta.frontMatter).forEach(key => {\r\n            if (key === v) {\r\n                return\r\n            }\r\n            newfmt[key] = postMeta.frontMatter[key]\r\n        })\r\n        const meta = { ...postMeta, frontMatter: newfmt }\r\n        console.log(meta)\r\n        setPostMeta(meta)\r\n    }\r\n\r\n    return (\r\n        <Modal\r\n            title={\r\n                <div style={{ textAlign: 'left' }}>\r\n                    文章属性\r\n                </div>\r\n            }\r\n            open={visible}\r\n            onCancel={() => {\r\n                setVisible(false)\r\n                console.log('cancel', originFms)\r\n                setPostMeta({ ...postMeta, tags: originTags, categories: originCats, frontMatter: originFms })\r\n            }}\r\n            onOk={() => {\r\n                setVisible(false)\r\n                handleChange({ tags: postMeta.tags, categories: postMeta.categories, frontMatter: postMeta.frontMatter })\r\n            }}\r\n            afterOpenChange={() => {\r\n                setOriginTags(postMeta.tags)\r\n                setOriginCats(postMeta.categories)\r\n                setOriginFms(postMeta.frontMatter)\r\n            }}\r\n            style={{ width: 800 }}\r\n        >\r\n            <Row>\r\n                <Col>\r\n                </Col>\r\n                <Col >\r\n                    <Space style={{ width: '100', flexWrap: 'wrap' }}>\r\n                        {\r\n                            // 循环填充当前已有的标签\r\n                            postMeta.tags.map((item) => {\r\n                                return <Tag key={item} closable onClose={() => tagClose(item)} color=\"blue\" style={{ marginBottom: 5 }}>{item}</Tag>\r\n                            })\r\n                        }\r\n                        <Button type='dashed' onClick={() => {\r\n                            setTagOpenStat(!tagOpenStat)\r\n                            setCatOpenStat(false)\r\n                            setFmOpenStat(false)\r\n                        }}>+添加标签</Button>\r\n                    </Space>\r\n                    {/* todo 打开添加标签的界面 */}\r\n                    {\r\n                        <TagAdder existTags={tagCatMeta.tags} tags={postMeta.tags} onchange={(v) => {\r\n                            const meta = { ...postMeta, tags: v }\r\n                            console.log(v)\r\n                            setPostMeta(meta)\r\n                        }} visible={tagOpenStat} cardTitle={'标签'} placeholder={'请输入标签...'} onClose={() => setTagOpenStat(false)} />\r\n                    }\r\n                </Col>\r\n            </Row>\r\n            <Row style={{ marginTop: 15, marginBottom: 15 }}>\r\n                <Col>\r\n                    <Space style={{ width: '100', flexWrap: 'wrap' }}>\r\n                        {\r\n                            postMeta.categories.map((item) => {\r\n                                return <Tag key={item} color=\"blue\" style={{ marginBottom: 5 }} closable onClose={() => catClose(item)}>{item}</Tag>\r\n                            })\r\n                        }\r\n                        <Button type='dashed' onClick={() => {\r\n                            setCatOpenStat(!catOpenStat)\r\n                            setFmOpenStat(false)\r\n                            setTagOpenStat(false)\r\n                        }}>+添加分类</Button>\r\n                    </Space>\r\n                    {\r\n                        /* todo 打开添加标签的界面 */\r\n                        <TagAdder existTags={tagCatMeta.categories} tags={postMeta.categories} onchange={(v) => {\r\n                            const meta = { ...postMeta, categories: v }\r\n                            setPostMeta(meta)\r\n                        }} visible={catOpenStat} cardTitle={'分类'} placeholder={'请输入分类...'} onClose={() => setCatOpenStat(false)} />\r\n                    }\r\n                </Col>\r\n            </Row>\r\n            <Row style={{ marginTop: 15, marginBottom: 15 }}>\r\n                <Col>\r\n                    <Space style={{ width: '100', flexWrap: 'wrap' }}>\r\n                        {\r\n                            /* 遍历渲染已有的fontMatter */\r\n                            Object.keys(postMeta.frontMatter).map((item) => {\r\n                                return (\r\n                                    <Tooltip key={item} title={!postMeta.frontMatter[item] ? 'unset' : postMeta.frontMatter[item]}>\r\n                                        <Tag closable onClose={() => fmtClose(item)} key={item} color=\"blue\" style={{ marginBottom: 5 }}>{item}</Tag>\r\n                                    </Tooltip>\r\n                                )\r\n                            })\r\n                        }\r\n                        <Button type='dashed'\r\n                            onClick={() => {\r\n                                setFmOpenStat(!fmOpenStat)\r\n                                setTagOpenStat(false)\r\n                                setCatOpenStat(false)\r\n                            }}\r\n                        >+自定义frontMatter</Button>\r\n                    </Space>\r\n                    {\r\n                        /* todo 打开添加标签的界面 */\r\n                        <FrontMatterAdder existFrontMatter={originFms} onClose={() => { setFmOpenStat(false) }} visible={fmOpenStat} title={'Font-Matter'} frontMatter={postMeta.frontMatter} onChange={\r\n                            (v) => {\r\n                                const meta = { ...postMeta, frontMatter: v }\r\n                                setPostMeta(meta)\r\n                            }\r\n                        } />\r\n                    }\r\n                </Col>\r\n            </Row>\r\n        </Modal>\r\n    )\r\n}","import { Button, Card, Checkbox, Input, Tag } from \"antd\"\r\nimport React, { useEffect, useState } from \"react\"\r\n\r\nconst CheckboxGroup = Checkbox.Group\r\n\r\nexport function TagAdder({ existTags, tags, onchange, onClose, visible, cardTitle, placeholder }) {\r\n\r\n    const [tagInputValue, setTagInputValue] = useState('')\r\n    const [localVisible, setLocalVisible] = useState(visible)\r\n\r\n    useEffect(() => {\r\n        // 当外部的 visible 发生变化时，同步更新本地的状态\r\n        setLocalVisible(visible)\r\n    }, [visible])\r\n\r\n    const addNewTag = (v) => {\r\n        const inputValue = v.target.value\r\n        if (inputValue.trim() == '') {\r\n            setTagInputValue('')\r\n            return\r\n        }\r\n        const tagSet = new Set(tags)\r\n        tagSet.add(inputValue)\r\n        onchange(Array.from(tagSet))\r\n        setTagInputValue('')\r\n    }\r\n\r\n\r\n    function tagModified() {\r\n        const options = []\r\n        Object.keys(existTags).forEach((name) => {\r\n            options.push(existTags[name])\r\n        })\r\n        return (\r\n            <CheckboxGroup\r\n                options={options.map((item, i) => ({\r\n                    label: (\r\n                        <Tag color={tags.includes(item) ? 'purple' : ''} style={{ marginBottom: 5 }}>\r\n                            {item}\r\n                        </Tag>\r\n                    ),\r\n                    value: item\r\n                }))}\r\n                value={tags}\r\n                onChange={(v) => { onchange(v) }}\r\n            />\r\n        )\r\n    }\r\n\r\n    function addTag() {\r\n        return (\r\n            <div style={{ width: '100%', display: 'flex' }}>\r\n                <Input\r\n                    style={{ flex: 1 }}\r\n                    placeholder={placeholder}\r\n                    value={tagInputValue}\r\n                    onChange={(v) => setTagInputValue(v.target.value)}\r\n                    onPressEnter={(v) => { addNewTag(v) }}\r\n                />\r\n                <Button\r\n                    type=\"default\"\r\n                    style={{ marginLeft: '5px' }}\r\n                    onClick={() => {\r\n                        setLocalVisible(!visible)\r\n                        onClose()\r\n                    }}\r\n                >\r\n                    X\r\n                </Button>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    return (\r\n        localVisible &&\r\n        <Card\r\n            title={cardTitle}\r\n            bordered={true}\r\n            hoverable={true}\r\n            style={{ position: 'absolute', zIndex: 999, width: '350px' }}\r\n            extra={addTag()}\r\n        >\r\n            <div style={{ maxHeight: '200px', overflowY: 'auto' }}>\r\n                {tagModified()}\r\n            </div>\r\n        </Card>\r\n    )\r\n}"],"names":["CheckboxGroup","Checkbox","Group","FrontMatterAdder","_ref","visible","onClose","title","existFrontMatter","frontMatter","onChange","_useState2","_slicedToArray","useState","localVisible","setLocalVisible","_useState4","inputFmtKeyValue","setInputFmtKeyValue","_useState6","inputFmtValueValue","setInputFmtValueValue","useEffect","fmkeys","options","onInputEnterKeyPress","trim","length","newFmt","_objectSpread","React","Card","bordered","hoverable","style","position","top","zIndex","width","extra","display","alignItems","Space","Input","flex","placeholder","value","v","target","onPressEnter","Button","type","onClick","Object","keys","forEach","name","i","push","label","Tooltip","key","Tag","color","defaultValue","newfmt","console","log","PostSettings","setVisible","tagCatMeta","postMeta","setTagCatMeta","setPostMeta","handleChange","tagOpenStat","setTagOpenStat","originTags","setOriginTags","catOpenStat","setCatOpenStat","_useState8","originCats","setOriginCats","_useState10","fmOpenStat","setFmOpenStat","_useState12","originFms","setOriginFms","Modal","textAlign","open","onCancel","tags","categories","onOk","afterOpenChange","Row","Col","flexWrap","map","item","closable","newTags","filter","meta","marginBottom","TagAdder","existTags","onchange","cardTitle","marginTop","newCats","fmtClose","tagInputValue","setTagInputValue","inputValue","tagSet","Set","add","Array","from","addNewTag","marginLeft","maxHeight","overflowY","includes"],"sourceRoot":""}